// Generated by CIRCT firtool-1.43.0
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module ModMul(	// <stdin>:3:10
  input           clock,	// <stdin>:4:11
                  reset,	// <stdin>:5:11
                  din_valid,	// src/main/scala/operator/ModMul.scala:17:18
  input  [2047:0] din_bits_mult,	// src/main/scala/operator/ModMul.scala:17:18
                  din_bits_multcand,	// src/main/scala/operator/ModMul.scala:17:18
                  din_bits_mod,	// src/main/scala/operator/ModMul.scala:17:18
  output          dout_valid,	// src/main/scala/operator/ModMul.scala:18:18
  output [2047:0] dout_bits_res	// src/main/scala/operator/ModMul.scala:18:18
);

  reg [2048:0] p;	// src/main/scala/operator/ModMul.scala:20:22
  reg [2049:0] a;	// src/main/scala/operator/ModMul.scala:21:22
  reg [2047:0] x;	// src/main/scala/operator/ModMul.scala:22:22
  reg [2047:0] y;	// src/main/scala/operator/ModMul.scala:23:22
  reg [2047:0] m;	// src/main/scala/operator/ModMul.scala:24:22
  reg [2047:0] res;	// src/main/scala/operator/ModMul.scala:25:22
  reg          dout_valid_reg;	// src/main/scala/operator/ModMul.scala:28:33
  reg [11:0]   count;	// src/main/scala/operator/ModMul.scala:31:28
  reg [2:0]    status;	// src/main/scala/operator/ModMul.scala:35:25
  always @(posedge clock) begin	// <stdin>:4:11
    if (reset) begin	// <stdin>:4:11
      p <= 2049'h0;	// src/main/scala/operator/ModMul.scala:20:22
      a <= 2050'h0;	// src/main/scala/operator/ModMul.scala:21:22
      x <= 2048'h0;	// src/main/scala/operator/ModMul.scala:22:22
      y <= 2048'h0;	// src/main/scala/operator/ModMul.scala:22:22, :23:22
      m <= 2048'h0;	// src/main/scala/operator/ModMul.scala:22:22, :24:22
      res <= 2048'h0;	// src/main/scala/operator/ModMul.scala:22:22, :25:22
      dout_valid_reg <= 1'h0;	// src/main/scala/operator/ModMul.scala:28:33
      count <= 12'h0;	// src/main/scala/operator/ModMul.scala:31:28
      status <= 3'h0;	// src/main/scala/operator/ModMul.scala:35:25
    end
    else begin	// <stdin>:4:11
      automatic logic            _GEN;	// src/main/scala/operator/ModMul.scala:41:19
      automatic logic            _GEN_0;	// src/main/scala/operator/ModMul.scala:41:19
      automatic logic            _GEN_1;	// src/main/scala/operator/ModMul.scala:41:19
      automatic logic            _GEN_2;	// src/main/scala/operator/ModMul.scala:41:19
      automatic logic            _GEN_3;	// src/main/scala/operator/ModMul.scala:41:19
      automatic logic            _GEN_4;	// src/main/scala/operator/ModMul.scala:68:24
      automatic logic [7:0][2:0] _GEN_5;	// src/main/scala/operator/ModMul.scala:35:25, :41:19, :44:41, :56:24, :60:20, :65:20, :68:38, :77:20
      _GEN = status == 3'h0;	// src/main/scala/operator/ModMul.scala:35:25, :41:19
      _GEN_0 = status == 3'h1;	// src/main/scala/operator/ModMul.scala:35:25, :41:19, :45:24
      _GEN_1 = status == 3'h2;	// src/main/scala/operator/ModMul.scala:35:25, :41:19, :56:24
      _GEN_2 = status == 3'h3;	// src/main/scala/operator/ModMul.scala:35:25, :41:19, :60:20
      _GEN_3 = status == 3'h4;	// src/main/scala/operator/ModMul.scala:35:25, :41:19, :65:20
      _GEN_4 = count == 12'h800;	// src/main/scala/operator/ModMul.scala:31:28, :32:28, :68:24
      if (~_GEN) begin	// src/main/scala/operator/ModMul.scala:41:19, :43:28
        if (_GEN_0) begin	// src/main/scala/operator/ModMul.scala:41:19
          p <= 2049'h0;	// src/main/scala/operator/ModMul.scala:20:22
          count <= 12'h0;	// src/main/scala/operator/ModMul.scala:31:28
        end
        else if (_GEN_1 | ~_GEN_2) begin	// src/main/scala/operator/ModMul.scala:20:22, :31:28, :41:19
        end
        else begin	// src/main/scala/operator/ModMul.scala:31:28, :41:19
          if (a[0]) begin	// src/main/scala/operator/ModMul.scala:21:22, :63:28
            automatic logic [2049:0] _GEN_6;	// src/main/scala/operator/ModMul.scala:63:36
            _GEN_6 = a + {2'h0, m};	// src/main/scala/operator/ModMul.scala:21:22, :24:22, :59:25, :63:36
            p <= _GEN_6[2049:1];	// src/main/scala/operator/ModMul.scala:20:22, :27:33, :63:{36,41}
          end
          else	// src/main/scala/operator/ModMul.scala:63:28
            p <= a[2049:1];	// src/main/scala/operator/ModMul.scala:20:22, :21:22, :27:33, :63:51
          count <= count + 12'h1;	// src/main/scala/operator/ModMul.scala:31:28, :64:29
        end
      end
      if (_GEN | _GEN_0 | ~_GEN_1) begin	// src/main/scala/operator/ModMul.scala:21:22, :41:19
      end
      else begin	// src/main/scala/operator/ModMul.scala:21:22, :41:19
        automatic logic [2047:0] _GEN_7;	// src/main/scala/operator/ModMul.scala:59:32
        _GEN_7 = x >> count;	// src/main/scala/operator/ModMul.scala:22:22, :31:28, :59:32
        a <= {1'h0, p + {1'h0, _GEN_7[0] ? y : 2048'h0}};	// src/main/scala/operator/ModMul.scala:20:22, :21:22, :22:22, :23:22, :28:33, :59:{20,25,30,32}
      end
      if (_GEN | ~_GEN_0) begin	// src/main/scala/operator/ModMul.scala:22:22, :24:22, :41:19
      end
      else begin	// src/main/scala/operator/ModMul.scala:24:22, :41:19
        x <= din_bits_mult;	// src/main/scala/operator/ModMul.scala:22:22
        y <= din_bits_multcand;	// src/main/scala/operator/ModMul.scala:23:22
        m <= din_bits_mod;	// src/main/scala/operator/ModMul.scala:24:22
      end
      if (_GEN | _GEN_0 | _GEN_1 | _GEN_2 | ~(_GEN_3 & _GEN_4)) begin	// src/main/scala/operator/ModMul.scala:25:22, :41:19, :68:{24,38}, :69:24
      end
      else	// src/main/scala/operator/ModMul.scala:25:22, :41:19
        res <= p > {1'h0, m} ? p[2047:0] - m : p[2047:0];	// src/main/scala/operator/ModMul.scala:20:22, :24:22, :25:22, :28:33, :69:{30,33,40}
      dout_valid_reg <=
        ~_GEN & (~(_GEN_0 | _GEN_1 | _GEN_2 | _GEN_3) & status == 3'h5 | dout_valid_reg);	// src/main/scala/operator/ModMul.scala:28:33, :35:25, :41:19, :43:28, :70:24
      _GEN_5 =
        {{status},
         {status},
         {3'h0},
         {_GEN_4 ? 3'h5 : 3'h2},
         {3'h4},
         {3'h3},
         {3'h2},
         {{2'h0, din_valid}}};	// src/main/scala/operator/ModMul.scala:35:25, :41:19, :44:41, :45:24, :47:24, :56:24, :59:25, :60:20, :65:20, :68:{24,38}, :70:24, :72:24, :77:20
      status <= _GEN_5[status];	// src/main/scala/operator/ModMul.scala:35:25, :41:19, :44:41, :56:24, :60:20, :65:20, :68:38, :77:20
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// <stdin>:3:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:3:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:3:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:3:10
      automatic logic [31:0] _RANDOM[0:385];	// <stdin>:3:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:3:10
        `INIT_RANDOM_PROLOG_	// <stdin>:3:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:3:10
        for (logic [8:0] i = 9'h0; i < 9'h182; i += 9'h1) begin
          _RANDOM[i] = `RANDOM;	// <stdin>:3:10
        end	// <stdin>:3:10
        p =
          {_RANDOM[9'h0],
           _RANDOM[9'h1],
           _RANDOM[9'h2],
           _RANDOM[9'h3],
           _RANDOM[9'h4],
           _RANDOM[9'h5],
           _RANDOM[9'h6],
           _RANDOM[9'h7],
           _RANDOM[9'h8],
           _RANDOM[9'h9],
           _RANDOM[9'hA],
           _RANDOM[9'hB],
           _RANDOM[9'hC],
           _RANDOM[9'hD],
           _RANDOM[9'hE],
           _RANDOM[9'hF],
           _RANDOM[9'h10],
           _RANDOM[9'h11],
           _RANDOM[9'h12],
           _RANDOM[9'h13],
           _RANDOM[9'h14],
           _RANDOM[9'h15],
           _RANDOM[9'h16],
           _RANDOM[9'h17],
           _RANDOM[9'h18],
           _RANDOM[9'h19],
           _RANDOM[9'h1A],
           _RANDOM[9'h1B],
           _RANDOM[9'h1C],
           _RANDOM[9'h1D],
           _RANDOM[9'h1E],
           _RANDOM[9'h1F],
           _RANDOM[9'h20],
           _RANDOM[9'h21],
           _RANDOM[9'h22],
           _RANDOM[9'h23],
           _RANDOM[9'h24],
           _RANDOM[9'h25],
           _RANDOM[9'h26],
           _RANDOM[9'h27],
           _RANDOM[9'h28],
           _RANDOM[9'h29],
           _RANDOM[9'h2A],
           _RANDOM[9'h2B],
           _RANDOM[9'h2C],
           _RANDOM[9'h2D],
           _RANDOM[9'h2E],
           _RANDOM[9'h2F],
           _RANDOM[9'h30],
           _RANDOM[9'h31],
           _RANDOM[9'h32],
           _RANDOM[9'h33],
           _RANDOM[9'h34],
           _RANDOM[9'h35],
           _RANDOM[9'h36],
           _RANDOM[9'h37],
           _RANDOM[9'h38],
           _RANDOM[9'h39],
           _RANDOM[9'h3A],
           _RANDOM[9'h3B],
           _RANDOM[9'h3C],
           _RANDOM[9'h3D],
           _RANDOM[9'h3E],
           _RANDOM[9'h3F],
           _RANDOM[9'h40][0]};	// <stdin>:3:10, src/main/scala/operator/ModMul.scala:20:22
        a =
          {_RANDOM[9'h40][31:1],
           _RANDOM[9'h41],
           _RANDOM[9'h42],
           _RANDOM[9'h43],
           _RANDOM[9'h44],
           _RANDOM[9'h45],
           _RANDOM[9'h46],
           _RANDOM[9'h47],
           _RANDOM[9'h48],
           _RANDOM[9'h49],
           _RANDOM[9'h4A],
           _RANDOM[9'h4B],
           _RANDOM[9'h4C],
           _RANDOM[9'h4D],
           _RANDOM[9'h4E],
           _RANDOM[9'h4F],
           _RANDOM[9'h50],
           _RANDOM[9'h51],
           _RANDOM[9'h52],
           _RANDOM[9'h53],
           _RANDOM[9'h54],
           _RANDOM[9'h55],
           _RANDOM[9'h56],
           _RANDOM[9'h57],
           _RANDOM[9'h58],
           _RANDOM[9'h59],
           _RANDOM[9'h5A],
           _RANDOM[9'h5B],
           _RANDOM[9'h5C],
           _RANDOM[9'h5D],
           _RANDOM[9'h5E],
           _RANDOM[9'h5F],
           _RANDOM[9'h60],
           _RANDOM[9'h61],
           _RANDOM[9'h62],
           _RANDOM[9'h63],
           _RANDOM[9'h64],
           _RANDOM[9'h65],
           _RANDOM[9'h66],
           _RANDOM[9'h67],
           _RANDOM[9'h68],
           _RANDOM[9'h69],
           _RANDOM[9'h6A],
           _RANDOM[9'h6B],
           _RANDOM[9'h6C],
           _RANDOM[9'h6D],
           _RANDOM[9'h6E],
           _RANDOM[9'h6F],
           _RANDOM[9'h70],
           _RANDOM[9'h71],
           _RANDOM[9'h72],
           _RANDOM[9'h73],
           _RANDOM[9'h74],
           _RANDOM[9'h75],
           _RANDOM[9'h76],
           _RANDOM[9'h77],
           _RANDOM[9'h78],
           _RANDOM[9'h79],
           _RANDOM[9'h7A],
           _RANDOM[9'h7B],
           _RANDOM[9'h7C],
           _RANDOM[9'h7D],
           _RANDOM[9'h7E],
           _RANDOM[9'h7F],
           _RANDOM[9'h80][2:0]};	// <stdin>:3:10, src/main/scala/operator/ModMul.scala:20:22, :21:22
        x =
          {_RANDOM[9'h80][31:3],
           _RANDOM[9'h81],
           _RANDOM[9'h82],
           _RANDOM[9'h83],
           _RANDOM[9'h84],
           _RANDOM[9'h85],
           _RANDOM[9'h86],
           _RANDOM[9'h87],
           _RANDOM[9'h88],
           _RANDOM[9'h89],
           _RANDOM[9'h8A],
           _RANDOM[9'h8B],
           _RANDOM[9'h8C],
           _RANDOM[9'h8D],
           _RANDOM[9'h8E],
           _RANDOM[9'h8F],
           _RANDOM[9'h90],
           _RANDOM[9'h91],
           _RANDOM[9'h92],
           _RANDOM[9'h93],
           _RANDOM[9'h94],
           _RANDOM[9'h95],
           _RANDOM[9'h96],
           _RANDOM[9'h97],
           _RANDOM[9'h98],
           _RANDOM[9'h99],
           _RANDOM[9'h9A],
           _RANDOM[9'h9B],
           _RANDOM[9'h9C],
           _RANDOM[9'h9D],
           _RANDOM[9'h9E],
           _RANDOM[9'h9F],
           _RANDOM[9'hA0],
           _RANDOM[9'hA1],
           _RANDOM[9'hA2],
           _RANDOM[9'hA3],
           _RANDOM[9'hA4],
           _RANDOM[9'hA5],
           _RANDOM[9'hA6],
           _RANDOM[9'hA7],
           _RANDOM[9'hA8],
           _RANDOM[9'hA9],
           _RANDOM[9'hAA],
           _RANDOM[9'hAB],
           _RANDOM[9'hAC],
           _RANDOM[9'hAD],
           _RANDOM[9'hAE],
           _RANDOM[9'hAF],
           _RANDOM[9'hB0],
           _RANDOM[9'hB1],
           _RANDOM[9'hB2],
           _RANDOM[9'hB3],
           _RANDOM[9'hB4],
           _RANDOM[9'hB5],
           _RANDOM[9'hB6],
           _RANDOM[9'hB7],
           _RANDOM[9'hB8],
           _RANDOM[9'hB9],
           _RANDOM[9'hBA],
           _RANDOM[9'hBB],
           _RANDOM[9'hBC],
           _RANDOM[9'hBD],
           _RANDOM[9'hBE],
           _RANDOM[9'hBF],
           _RANDOM[9'hC0][2:0]};	// <stdin>:3:10, src/main/scala/operator/ModMul.scala:21:22, :22:22
        y =
          {_RANDOM[9'hC0][31:3],
           _RANDOM[9'hC1],
           _RANDOM[9'hC2],
           _RANDOM[9'hC3],
           _RANDOM[9'hC4],
           _RANDOM[9'hC5],
           _RANDOM[9'hC6],
           _RANDOM[9'hC7],
           _RANDOM[9'hC8],
           _RANDOM[9'hC9],
           _RANDOM[9'hCA],
           _RANDOM[9'hCB],
           _RANDOM[9'hCC],
           _RANDOM[9'hCD],
           _RANDOM[9'hCE],
           _RANDOM[9'hCF],
           _RANDOM[9'hD0],
           _RANDOM[9'hD1],
           _RANDOM[9'hD2],
           _RANDOM[9'hD3],
           _RANDOM[9'hD4],
           _RANDOM[9'hD5],
           _RANDOM[9'hD6],
           _RANDOM[9'hD7],
           _RANDOM[9'hD8],
           _RANDOM[9'hD9],
           _RANDOM[9'hDA],
           _RANDOM[9'hDB],
           _RANDOM[9'hDC],
           _RANDOM[9'hDD],
           _RANDOM[9'hDE],
           _RANDOM[9'hDF],
           _RANDOM[9'hE0],
           _RANDOM[9'hE1],
           _RANDOM[9'hE2],
           _RANDOM[9'hE3],
           _RANDOM[9'hE4],
           _RANDOM[9'hE5],
           _RANDOM[9'hE6],
           _RANDOM[9'hE7],
           _RANDOM[9'hE8],
           _RANDOM[9'hE9],
           _RANDOM[9'hEA],
           _RANDOM[9'hEB],
           _RANDOM[9'hEC],
           _RANDOM[9'hED],
           _RANDOM[9'hEE],
           _RANDOM[9'hEF],
           _RANDOM[9'hF0],
           _RANDOM[9'hF1],
           _RANDOM[9'hF2],
           _RANDOM[9'hF3],
           _RANDOM[9'hF4],
           _RANDOM[9'hF5],
           _RANDOM[9'hF6],
           _RANDOM[9'hF7],
           _RANDOM[9'hF8],
           _RANDOM[9'hF9],
           _RANDOM[9'hFA],
           _RANDOM[9'hFB],
           _RANDOM[9'hFC],
           _RANDOM[9'hFD],
           _RANDOM[9'hFE],
           _RANDOM[9'hFF],
           _RANDOM[9'h100][2:0]};	// <stdin>:3:10, src/main/scala/operator/ModMul.scala:22:22, :23:22
        m =
          {_RANDOM[9'h100][31:3],
           _RANDOM[9'h101],
           _RANDOM[9'h102],
           _RANDOM[9'h103],
           _RANDOM[9'h104],
           _RANDOM[9'h105],
           _RANDOM[9'h106],
           _RANDOM[9'h107],
           _RANDOM[9'h108],
           _RANDOM[9'h109],
           _RANDOM[9'h10A],
           _RANDOM[9'h10B],
           _RANDOM[9'h10C],
           _RANDOM[9'h10D],
           _RANDOM[9'h10E],
           _RANDOM[9'h10F],
           _RANDOM[9'h110],
           _RANDOM[9'h111],
           _RANDOM[9'h112],
           _RANDOM[9'h113],
           _RANDOM[9'h114],
           _RANDOM[9'h115],
           _RANDOM[9'h116],
           _RANDOM[9'h117],
           _RANDOM[9'h118],
           _RANDOM[9'h119],
           _RANDOM[9'h11A],
           _RANDOM[9'h11B],
           _RANDOM[9'h11C],
           _RANDOM[9'h11D],
           _RANDOM[9'h11E],
           _RANDOM[9'h11F],
           _RANDOM[9'h120],
           _RANDOM[9'h121],
           _RANDOM[9'h122],
           _RANDOM[9'h123],
           _RANDOM[9'h124],
           _RANDOM[9'h125],
           _RANDOM[9'h126],
           _RANDOM[9'h127],
           _RANDOM[9'h128],
           _RANDOM[9'h129],
           _RANDOM[9'h12A],
           _RANDOM[9'h12B],
           _RANDOM[9'h12C],
           _RANDOM[9'h12D],
           _RANDOM[9'h12E],
           _RANDOM[9'h12F],
           _RANDOM[9'h130],
           _RANDOM[9'h131],
           _RANDOM[9'h132],
           _RANDOM[9'h133],
           _RANDOM[9'h134],
           _RANDOM[9'h135],
           _RANDOM[9'h136],
           _RANDOM[9'h137],
           _RANDOM[9'h138],
           _RANDOM[9'h139],
           _RANDOM[9'h13A],
           _RANDOM[9'h13B],
           _RANDOM[9'h13C],
           _RANDOM[9'h13D],
           _RANDOM[9'h13E],
           _RANDOM[9'h13F],
           _RANDOM[9'h140][2:0]};	// <stdin>:3:10, src/main/scala/operator/ModMul.scala:23:22, :24:22
        res =
          {_RANDOM[9'h140][31:3],
           _RANDOM[9'h141],
           _RANDOM[9'h142],
           _RANDOM[9'h143],
           _RANDOM[9'h144],
           _RANDOM[9'h145],
           _RANDOM[9'h146],
           _RANDOM[9'h147],
           _RANDOM[9'h148],
           _RANDOM[9'h149],
           _RANDOM[9'h14A],
           _RANDOM[9'h14B],
           _RANDOM[9'h14C],
           _RANDOM[9'h14D],
           _RANDOM[9'h14E],
           _RANDOM[9'h14F],
           _RANDOM[9'h150],
           _RANDOM[9'h151],
           _RANDOM[9'h152],
           _RANDOM[9'h153],
           _RANDOM[9'h154],
           _RANDOM[9'h155],
           _RANDOM[9'h156],
           _RANDOM[9'h157],
           _RANDOM[9'h158],
           _RANDOM[9'h159],
           _RANDOM[9'h15A],
           _RANDOM[9'h15B],
           _RANDOM[9'h15C],
           _RANDOM[9'h15D],
           _RANDOM[9'h15E],
           _RANDOM[9'h15F],
           _RANDOM[9'h160],
           _RANDOM[9'h161],
           _RANDOM[9'h162],
           _RANDOM[9'h163],
           _RANDOM[9'h164],
           _RANDOM[9'h165],
           _RANDOM[9'h166],
           _RANDOM[9'h167],
           _RANDOM[9'h168],
           _RANDOM[9'h169],
           _RANDOM[9'h16A],
           _RANDOM[9'h16B],
           _RANDOM[9'h16C],
           _RANDOM[9'h16D],
           _RANDOM[9'h16E],
           _RANDOM[9'h16F],
           _RANDOM[9'h170],
           _RANDOM[9'h171],
           _RANDOM[9'h172],
           _RANDOM[9'h173],
           _RANDOM[9'h174],
           _RANDOM[9'h175],
           _RANDOM[9'h176],
           _RANDOM[9'h177],
           _RANDOM[9'h178],
           _RANDOM[9'h179],
           _RANDOM[9'h17A],
           _RANDOM[9'h17B],
           _RANDOM[9'h17C],
           _RANDOM[9'h17D],
           _RANDOM[9'h17E],
           _RANDOM[9'h17F],
           _RANDOM[9'h180][2:0]};	// <stdin>:3:10, src/main/scala/operator/ModMul.scala:24:22, :25:22
        dout_valid_reg = _RANDOM[9'h180][4];	// <stdin>:3:10, src/main/scala/operator/ModMul.scala:25:22, :28:33
        count = _RANDOM[9'h180][17:6];	// <stdin>:3:10, src/main/scala/operator/ModMul.scala:25:22, :31:28
        status = {_RANDOM[9'h180][31:30], _RANDOM[9'h181][0]};	// <stdin>:3:10, src/main/scala/operator/ModMul.scala:25:22, :35:25
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:3:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:3:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign dout_valid = dout_valid_reg;	// <stdin>:3:10, src/main/scala/operator/ModMul.scala:28:33
  assign dout_bits_res = res;	// <stdin>:3:10, src/main/scala/operator/ModMul.scala:25:22
endmodule

module Powmod(	// <stdin>:97:10
  input           clock,	// <stdin>:98:11
                  reset,	// <stdin>:99:11
                  din_valid,	// src/main/scala/operator/Powmod.scala:17:18
  input  [1023:0] din_bits_base,	// src/main/scala/operator/Powmod.scala:17:18
                  din_bits_exp,	// src/main/scala/operator/Powmod.scala:17:18
  input  [2047:0] din_bits_mod,	// src/main/scala/operator/Powmod.scala:17:18
                  din_bits_expk,	// src/main/scala/operator/Powmod.scala:17:18
                  din_bits_exp2k,	// src/main/scala/operator/Powmod.scala:17:18
  output          din_ready,	// src/main/scala/operator/Powmod.scala:17:18
                  dout_valid,	// src/main/scala/operator/Powmod.scala:18:18
  output [2047:0] dout_bits_res	// src/main/scala/operator/Powmod.scala:18:18
);

  wire          _mp_dout_valid;	// src/main/scala/operator/Powmod.scala:46:20
  wire [2047:0] _mp_dout_bits_res;	// src/main/scala/operator/Powmod.scala:46:20
  reg  [1023:0] x;	// src/main/scala/operator/Powmod.scala:20:31
  reg  [2047:0] e;	// src/main/scala/operator/Powmod.scala:21:31
  reg  [2047:0] ty;	// src/main/scala/operator/Powmod.scala:22:31
  reg  [2047:0] res;	// src/main/scala/operator/Powmod.scala:23:31
  reg  [2047:0] mp_mult;	// src/main/scala/operator/Powmod.scala:25:36
  reg  [2047:0] mp_multcand;	// src/main/scala/operator/Powmod.scala:26:36
  reg  [2047:0] mp_mod;	// src/main/scala/operator/Powmod.scala:27:36
  reg           mp_din_valid_reg;	// src/main/scala/operator/Powmod.scala:28:36
  reg           dout_valid_reg;	// src/main/scala/operator/Powmod.scala:33:36
  reg  [11:0]   count;	// src/main/scala/operator/Powmod.scala:36:24
  reg  [3:0]    status;	// src/main/scala/operator/Powmod.scala:40:26
  always @(posedge clock) begin	// <stdin>:98:11
    if (reset) begin	// <stdin>:98:11
      x <= 1024'h0;	// src/main/scala/operator/Powmod.scala:20:31
      e <= 2048'h0;	// src/main/scala/operator/Powmod.scala:21:31
      ty <= 2048'h0;	// src/main/scala/operator/Powmod.scala:21:31, :22:31
      res <= 2048'h0;	// src/main/scala/operator/Powmod.scala:21:31, :23:31
      mp_mult <= 2048'h0;	// src/main/scala/operator/Powmod.scala:21:31, :25:36
      mp_multcand <= 2048'h0;	// src/main/scala/operator/Powmod.scala:21:31, :26:36
      mp_mod <= 2048'h0;	// src/main/scala/operator/Powmod.scala:21:31, :27:36
      mp_din_valid_reg <= 1'h0;	// src/main/scala/operator/Powmod.scala:28:36
      dout_valid_reg <= 1'h0;	// src/main/scala/operator/Powmod.scala:28:36, :33:36
      count <= 12'h0;	// src/main/scala/operator/Powmod.scala:36:24
      status <= 4'h0;	// src/main/scala/operator/Powmod.scala:40:26
    end
    else begin	// <stdin>:98:11
      automatic logic             _GEN;	// src/main/scala/operator/Powmod.scala:52:19
      automatic logic             _GEN_0;	// src/main/scala/operator/Powmod.scala:52:19
      automatic logic             _GEN_1;	// src/main/scala/operator/Powmod.scala:20:31, :52:19
      automatic logic             _GEN_2;	// src/main/scala/operator/Powmod.scala:52:19
      automatic logic             _GEN_3;	// src/main/scala/operator/Powmod.scala:52:19
      automatic logic             _GEN_4;	// src/main/scala/operator/Powmod.scala:52:19
      automatic logic             _GEN_5;	// src/main/scala/operator/Powmod.scala:52:19
      automatic logic             _GEN_6;	// src/main/scala/operator/Powmod.scala:52:19
      automatic logic             _GEN_7;	// src/main/scala/operator/Powmod.scala:52:19
      automatic logic             _GEN_8;	// src/main/scala/operator/Powmod.scala:22:31, :52:19, :112:43, :113:24
      automatic logic             _GEN_9;	// src/main/scala/operator/Powmod.scala:22:31, :52:19
      automatic logic             _GEN_10;	// src/main/scala/operator/Powmod.scala:52:19
      automatic logic             _GEN_11;	// src/main/scala/operator/Powmod.scala:52:19
      automatic logic             _GEN_12;	// src/main/scala/operator/Powmod.scala:23:31, :52:19, :128:43, :129:32
      automatic logic             _GEN_13;	// src/main/scala/operator/Powmod.scala:23:31, :52:19
      automatic logic [1023:0]    _GEN_14;	// src/main/scala/operator/Powmod.scala:83:23
      automatic logic [15:0][3:0] _GEN_15;	// src/main/scala/operator/Powmod.scala:40:26, :52:19, :54:41, :68:30, :71:43, :80:38, :94:30, :97:43, :109:34, :112:43, :125:30, :128:43
      _GEN = status == 4'h0;	// src/main/scala/operator/Powmod.scala:40:26, :52:19
      _GEN_0 = status == 4'h1;	// src/main/scala/operator/Powmod.scala:40:26, :52:19, :55:24
      _GEN_1 = _GEN | ~_GEN_0;	// src/main/scala/operator/Powmod.scala:20:31, :52:19
      _GEN_2 = status == 4'h2;	// src/main/scala/operator/Powmod.scala:40:26, :52:19, :68:30
      _GEN_3 = status == 4'h3;	// src/main/scala/operator/Powmod.scala:40:26, :52:19, :73:24
      _GEN_4 = status == 4'h4;	// src/main/scala/operator/Powmod.scala:40:26, :52:19, :84:28
      _GEN_5 = status == 4'h5;	// src/main/scala/operator/Powmod.scala:40:26, :52:19, :94:30
      _GEN_6 = status == 4'h6;	// src/main/scala/operator/Powmod.scala:40:26, :52:19, :86:28
      _GEN_7 = status == 4'h7;	// src/main/scala/operator/Powmod.scala:40:26, :52:19, :109:34
      _GEN_8 = _GEN_7 & _mp_dout_valid;	// src/main/scala/operator/Powmod.scala:22:31, :46:20, :52:19, :112:43, :113:24
      _GEN_9 = _GEN_3 | _GEN_4 | _GEN_5 | _GEN_6;	// src/main/scala/operator/Powmod.scala:22:31, :52:19
      _GEN_10 = status == 4'h8;	// src/main/scala/operator/Powmod.scala:40:26, :52:19, :81:24
      _GEN_11 = status == 4'h9;	// src/main/scala/operator/Powmod.scala:40:26, :52:19, :125:30
      _GEN_12 = _GEN_11 & _mp_dout_valid;	// src/main/scala/operator/Powmod.scala:23:31, :46:20, :52:19, :128:43, :129:32
      _GEN_13 =
        _GEN | _GEN_0 | _GEN_2 | _GEN_3 | _GEN_4 | _GEN_5 | _GEN_6 | _GEN_7 | _GEN_10;	// src/main/scala/operator/Powmod.scala:23:31, :52:19
      if (_GEN_1) begin	// src/main/scala/operator/Powmod.scala:20:31, :52:19
      end
      else	// src/main/scala/operator/Powmod.scala:20:31, :52:19
        x <= din_bits_exp;	// src/main/scala/operator/Powmod.scala:20:31
      if (~_GEN) begin	// src/main/scala/operator/Powmod.scala:52:19
        automatic logic _GEN_16;	// src/main/scala/operator/Powmod.scala:28:36, :71:43, :75:34
        _GEN_16 = _mp_dout_valid & mp_din_valid_reg;	// src/main/scala/operator/Powmod.scala:28:36, :46:20, :71:43, :75:34
        if (_GEN_0) begin	// src/main/scala/operator/Powmod.scala:52:19
          e <= din_bits_expk;	// src/main/scala/operator/Powmod.scala:21:31
          mp_mult <= {1024'h0, din_bits_base};	// src/main/scala/operator/Powmod.scala:20:31, :25:36, :64:30
          mp_multcand <= din_bits_exp2k;	// src/main/scala/operator/Powmod.scala:26:36
          count <= 12'h0;	// src/main/scala/operator/Powmod.scala:36:24
        end
        else begin	// src/main/scala/operator/Powmod.scala:52:19
          if (_GEN_2 | _GEN_3 | _GEN_4 | ~(_GEN_5 & _mp_dout_valid)) begin	// src/main/scala/operator/Powmod.scala:21:31, :46:20, :52:19, :97:43, :98:24
          end
          else	// src/main/scala/operator/Powmod.scala:21:31, :52:19
            e <= _mp_dout_bits_res;	// src/main/scala/operator/Powmod.scala:21:31, :46:20
          if (~(_GEN_2 | _GEN_3)) begin	// src/main/scala/operator/Powmod.scala:25:36, :52:19
            if (_GEN_4) begin	// src/main/scala/operator/Powmod.scala:52:19
              mp_mult <= e;	// src/main/scala/operator/Powmod.scala:21:31, :25:36
              mp_multcand <= ty;	// src/main/scala/operator/Powmod.scala:22:31, :26:36
            end
            else if (~_GEN_5) begin	// src/main/scala/operator/Powmod.scala:52:19
              if (_GEN_6) begin	// src/main/scala/operator/Powmod.scala:52:19
                mp_mult <= ty;	// src/main/scala/operator/Powmod.scala:22:31, :25:36
                mp_multcand <= ty;	// src/main/scala/operator/Powmod.scala:22:31, :26:36
              end
              else if (_GEN_7 | ~_GEN_10) begin	// src/main/scala/operator/Powmod.scala:25:36, :26:36, :52:19
              end
              else begin	// src/main/scala/operator/Powmod.scala:26:36, :52:19
                mp_mult <= e;	// src/main/scala/operator/Powmod.scala:21:31, :25:36
                mp_multcand <= 2048'h1;	// src/main/scala/operator/Powmod.scala:26:36, :123:30
              end
            end
          end
          if (_GEN_2 | _GEN_9 | ~_GEN_8) begin	// src/main/scala/operator/Powmod.scala:22:31, :36:24, :52:19, :112:43, :113:24
          end
          else	// src/main/scala/operator/Powmod.scala:36:24, :52:19
            count <= count + 12'h1;	// src/main/scala/operator/Powmod.scala:36:24, :114:33
        end
        mp_din_valid_reg <=
          _GEN_0
          | (_GEN_2
               ? _GEN_16
               : _GEN_3
                   ? mp_din_valid_reg
                   : _GEN_4
                     | (_GEN_5
                          ? _GEN_16
                          : _GEN_6
                            | (_GEN_7
                                 ? _GEN_16
                                 : _GEN_10 | (~_GEN_11 | _mp_dout_valid)
                                   & mp_din_valid_reg)));	// src/main/scala/operator/Powmod.scala:28:36, :46:20, :52:19, :61:30, :71:43, :75:34, :91:30, :97:43, :108:34, :112:43, :124:30, :128:43
      end
      if (~(_GEN | _GEN_0)) begin	// src/main/scala/operator/Powmod.scala:22:31, :52:19
        if (_GEN_2) begin	// src/main/scala/operator/Powmod.scala:52:19
          if (_mp_dout_valid)	// src/main/scala/operator/Powmod.scala:46:20
            ty <= _mp_dout_bits_res;	// src/main/scala/operator/Powmod.scala:22:31, :46:20
        end
        else if (_GEN_9 | ~_GEN_8) begin	// src/main/scala/operator/Powmod.scala:22:31, :52:19, :112:43, :113:24
        end
        else	// src/main/scala/operator/Powmod.scala:22:31, :52:19
          ty <= _mp_dout_bits_res;	// src/main/scala/operator/Powmod.scala:22:31, :46:20
      end
      if (_GEN_13 | ~_GEN_12) begin	// src/main/scala/operator/Powmod.scala:23:31, :52:19, :128:43, :129:32
      end
      else	// src/main/scala/operator/Powmod.scala:23:31, :52:19
        res <= _mp_dout_bits_res;	// src/main/scala/operator/Powmod.scala:23:31, :46:20
      if (_GEN_1) begin	// src/main/scala/operator/Powmod.scala:20:31, :27:36, :52:19
      end
      else	// src/main/scala/operator/Powmod.scala:27:36, :52:19
        mp_mod <= din_bits_mod;	// src/main/scala/operator/Powmod.scala:27:36
      dout_valid_reg <= ~_GEN_13 & _GEN_12 | dout_valid_reg;	// src/main/scala/operator/Powmod.scala:23:31, :33:36, :52:19, :128:43, :129:32
      _GEN_14 = x >> count;	// src/main/scala/operator/Powmod.scala:20:31, :36:24, :83:23
      _GEN_15 =
        {{status},
         {status},
         {status},
         {status},
         {status},
         {status},
         {_mp_dout_valid ? 4'h0 : 4'h9},
         {4'h9},
         {{1'h0, ~_mp_dout_valid, 2'h3}},
         {4'h7},
         {_mp_dout_valid ? 4'h6 : 4'h5},
         {4'h5},
         {count == 12'h800 ? 4'h8 : {2'h1, ~(_GEN_14[0]), 1'h0}},
         {{3'h1, _mp_dout_valid}},
         {4'h2},
         {{3'h0, din_valid}}};	// src/main/scala/operator/Powmod.scala:28:36, :36:24, :37:28, :40:26, :46:20, :52:19, :54:41, :55:24, :57:24, :68:30, :71:43, :73:24, :76:34, :80:{24,38}, :81:24, :83:{23,39}, :84:28, :86:28, :94:30, :97:43, :99:24, :102:34, :109:34, :112:43, :115:24, :118:34, :125:30, :128:43, :131:32, :134:34
      status <= _GEN_15[status];	// src/main/scala/operator/Powmod.scala:40:26, :52:19, :54:41, :68:30, :71:43, :80:38, :94:30, :97:43, :109:34, :112:43, :125:30, :128:43
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// <stdin>:97:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:97:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:97:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:97:10
      automatic logic [31:0] _RANDOM[0:417];	// <stdin>:97:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:97:10
        `INIT_RANDOM_PROLOG_	// <stdin>:97:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:97:10
        for (logic [8:0] i = 9'h0; i < 9'h1A2; i += 9'h1) begin
          _RANDOM[i] = `RANDOM;	// <stdin>:97:10
        end	// <stdin>:97:10
        x =
          {_RANDOM[9'h0],
           _RANDOM[9'h1],
           _RANDOM[9'h2],
           _RANDOM[9'h3],
           _RANDOM[9'h4],
           _RANDOM[9'h5],
           _RANDOM[9'h6],
           _RANDOM[9'h7],
           _RANDOM[9'h8],
           _RANDOM[9'h9],
           _RANDOM[9'hA],
           _RANDOM[9'hB],
           _RANDOM[9'hC],
           _RANDOM[9'hD],
           _RANDOM[9'hE],
           _RANDOM[9'hF],
           _RANDOM[9'h10],
           _RANDOM[9'h11],
           _RANDOM[9'h12],
           _RANDOM[9'h13],
           _RANDOM[9'h14],
           _RANDOM[9'h15],
           _RANDOM[9'h16],
           _RANDOM[9'h17],
           _RANDOM[9'h18],
           _RANDOM[9'h19],
           _RANDOM[9'h1A],
           _RANDOM[9'h1B],
           _RANDOM[9'h1C],
           _RANDOM[9'h1D],
           _RANDOM[9'h1E],
           _RANDOM[9'h1F]};	// <stdin>:97:10, src/main/scala/operator/Powmod.scala:20:31
        e =
          {_RANDOM[9'h20],
           _RANDOM[9'h21],
           _RANDOM[9'h22],
           _RANDOM[9'h23],
           _RANDOM[9'h24],
           _RANDOM[9'h25],
           _RANDOM[9'h26],
           _RANDOM[9'h27],
           _RANDOM[9'h28],
           _RANDOM[9'h29],
           _RANDOM[9'h2A],
           _RANDOM[9'h2B],
           _RANDOM[9'h2C],
           _RANDOM[9'h2D],
           _RANDOM[9'h2E],
           _RANDOM[9'h2F],
           _RANDOM[9'h30],
           _RANDOM[9'h31],
           _RANDOM[9'h32],
           _RANDOM[9'h33],
           _RANDOM[9'h34],
           _RANDOM[9'h35],
           _RANDOM[9'h36],
           _RANDOM[9'h37],
           _RANDOM[9'h38],
           _RANDOM[9'h39],
           _RANDOM[9'h3A],
           _RANDOM[9'h3B],
           _RANDOM[9'h3C],
           _RANDOM[9'h3D],
           _RANDOM[9'h3E],
           _RANDOM[9'h3F],
           _RANDOM[9'h40],
           _RANDOM[9'h41],
           _RANDOM[9'h42],
           _RANDOM[9'h43],
           _RANDOM[9'h44],
           _RANDOM[9'h45],
           _RANDOM[9'h46],
           _RANDOM[9'h47],
           _RANDOM[9'h48],
           _RANDOM[9'h49],
           _RANDOM[9'h4A],
           _RANDOM[9'h4B],
           _RANDOM[9'h4C],
           _RANDOM[9'h4D],
           _RANDOM[9'h4E],
           _RANDOM[9'h4F],
           _RANDOM[9'h50],
           _RANDOM[9'h51],
           _RANDOM[9'h52],
           _RANDOM[9'h53],
           _RANDOM[9'h54],
           _RANDOM[9'h55],
           _RANDOM[9'h56],
           _RANDOM[9'h57],
           _RANDOM[9'h58],
           _RANDOM[9'h59],
           _RANDOM[9'h5A],
           _RANDOM[9'h5B],
           _RANDOM[9'h5C],
           _RANDOM[9'h5D],
           _RANDOM[9'h5E],
           _RANDOM[9'h5F]};	// <stdin>:97:10, src/main/scala/operator/Powmod.scala:21:31
        ty =
          {_RANDOM[9'h60],
           _RANDOM[9'h61],
           _RANDOM[9'h62],
           _RANDOM[9'h63],
           _RANDOM[9'h64],
           _RANDOM[9'h65],
           _RANDOM[9'h66],
           _RANDOM[9'h67],
           _RANDOM[9'h68],
           _RANDOM[9'h69],
           _RANDOM[9'h6A],
           _RANDOM[9'h6B],
           _RANDOM[9'h6C],
           _RANDOM[9'h6D],
           _RANDOM[9'h6E],
           _RANDOM[9'h6F],
           _RANDOM[9'h70],
           _RANDOM[9'h71],
           _RANDOM[9'h72],
           _RANDOM[9'h73],
           _RANDOM[9'h74],
           _RANDOM[9'h75],
           _RANDOM[9'h76],
           _RANDOM[9'h77],
           _RANDOM[9'h78],
           _RANDOM[9'h79],
           _RANDOM[9'h7A],
           _RANDOM[9'h7B],
           _RANDOM[9'h7C],
           _RANDOM[9'h7D],
           _RANDOM[9'h7E],
           _RANDOM[9'h7F],
           _RANDOM[9'h80],
           _RANDOM[9'h81],
           _RANDOM[9'h82],
           _RANDOM[9'h83],
           _RANDOM[9'h84],
           _RANDOM[9'h85],
           _RANDOM[9'h86],
           _RANDOM[9'h87],
           _RANDOM[9'h88],
           _RANDOM[9'h89],
           _RANDOM[9'h8A],
           _RANDOM[9'h8B],
           _RANDOM[9'h8C],
           _RANDOM[9'h8D],
           _RANDOM[9'h8E],
           _RANDOM[9'h8F],
           _RANDOM[9'h90],
           _RANDOM[9'h91],
           _RANDOM[9'h92],
           _RANDOM[9'h93],
           _RANDOM[9'h94],
           _RANDOM[9'h95],
           _RANDOM[9'h96],
           _RANDOM[9'h97],
           _RANDOM[9'h98],
           _RANDOM[9'h99],
           _RANDOM[9'h9A],
           _RANDOM[9'h9B],
           _RANDOM[9'h9C],
           _RANDOM[9'h9D],
           _RANDOM[9'h9E],
           _RANDOM[9'h9F]};	// <stdin>:97:10, src/main/scala/operator/Powmod.scala:22:31
        res =
          {_RANDOM[9'hA0],
           _RANDOM[9'hA1],
           _RANDOM[9'hA2],
           _RANDOM[9'hA3],
           _RANDOM[9'hA4],
           _RANDOM[9'hA5],
           _RANDOM[9'hA6],
           _RANDOM[9'hA7],
           _RANDOM[9'hA8],
           _RANDOM[9'hA9],
           _RANDOM[9'hAA],
           _RANDOM[9'hAB],
           _RANDOM[9'hAC],
           _RANDOM[9'hAD],
           _RANDOM[9'hAE],
           _RANDOM[9'hAF],
           _RANDOM[9'hB0],
           _RANDOM[9'hB1],
           _RANDOM[9'hB2],
           _RANDOM[9'hB3],
           _RANDOM[9'hB4],
           _RANDOM[9'hB5],
           _RANDOM[9'hB6],
           _RANDOM[9'hB7],
           _RANDOM[9'hB8],
           _RANDOM[9'hB9],
           _RANDOM[9'hBA],
           _RANDOM[9'hBB],
           _RANDOM[9'hBC],
           _RANDOM[9'hBD],
           _RANDOM[9'hBE],
           _RANDOM[9'hBF],
           _RANDOM[9'hC0],
           _RANDOM[9'hC1],
           _RANDOM[9'hC2],
           _RANDOM[9'hC3],
           _RANDOM[9'hC4],
           _RANDOM[9'hC5],
           _RANDOM[9'hC6],
           _RANDOM[9'hC7],
           _RANDOM[9'hC8],
           _RANDOM[9'hC9],
           _RANDOM[9'hCA],
           _RANDOM[9'hCB],
           _RANDOM[9'hCC],
           _RANDOM[9'hCD],
           _RANDOM[9'hCE],
           _RANDOM[9'hCF],
           _RANDOM[9'hD0],
           _RANDOM[9'hD1],
           _RANDOM[9'hD2],
           _RANDOM[9'hD3],
           _RANDOM[9'hD4],
           _RANDOM[9'hD5],
           _RANDOM[9'hD6],
           _RANDOM[9'hD7],
           _RANDOM[9'hD8],
           _RANDOM[9'hD9],
           _RANDOM[9'hDA],
           _RANDOM[9'hDB],
           _RANDOM[9'hDC],
           _RANDOM[9'hDD],
           _RANDOM[9'hDE],
           _RANDOM[9'hDF]};	// <stdin>:97:10, src/main/scala/operator/Powmod.scala:23:31
        mp_mult =
          {_RANDOM[9'hE0],
           _RANDOM[9'hE1],
           _RANDOM[9'hE2],
           _RANDOM[9'hE3],
           _RANDOM[9'hE4],
           _RANDOM[9'hE5],
           _RANDOM[9'hE6],
           _RANDOM[9'hE7],
           _RANDOM[9'hE8],
           _RANDOM[9'hE9],
           _RANDOM[9'hEA],
           _RANDOM[9'hEB],
           _RANDOM[9'hEC],
           _RANDOM[9'hED],
           _RANDOM[9'hEE],
           _RANDOM[9'hEF],
           _RANDOM[9'hF0],
           _RANDOM[9'hF1],
           _RANDOM[9'hF2],
           _RANDOM[9'hF3],
           _RANDOM[9'hF4],
           _RANDOM[9'hF5],
           _RANDOM[9'hF6],
           _RANDOM[9'hF7],
           _RANDOM[9'hF8],
           _RANDOM[9'hF9],
           _RANDOM[9'hFA],
           _RANDOM[9'hFB],
           _RANDOM[9'hFC],
           _RANDOM[9'hFD],
           _RANDOM[9'hFE],
           _RANDOM[9'hFF],
           _RANDOM[9'h100],
           _RANDOM[9'h101],
           _RANDOM[9'h102],
           _RANDOM[9'h103],
           _RANDOM[9'h104],
           _RANDOM[9'h105],
           _RANDOM[9'h106],
           _RANDOM[9'h107],
           _RANDOM[9'h108],
           _RANDOM[9'h109],
           _RANDOM[9'h10A],
           _RANDOM[9'h10B],
           _RANDOM[9'h10C],
           _RANDOM[9'h10D],
           _RANDOM[9'h10E],
           _RANDOM[9'h10F],
           _RANDOM[9'h110],
           _RANDOM[9'h111],
           _RANDOM[9'h112],
           _RANDOM[9'h113],
           _RANDOM[9'h114],
           _RANDOM[9'h115],
           _RANDOM[9'h116],
           _RANDOM[9'h117],
           _RANDOM[9'h118],
           _RANDOM[9'h119],
           _RANDOM[9'h11A],
           _RANDOM[9'h11B],
           _RANDOM[9'h11C],
           _RANDOM[9'h11D],
           _RANDOM[9'h11E],
           _RANDOM[9'h11F]};	// <stdin>:97:10, src/main/scala/operator/Powmod.scala:25:36
        mp_multcand =
          {_RANDOM[9'h120],
           _RANDOM[9'h121],
           _RANDOM[9'h122],
           _RANDOM[9'h123],
           _RANDOM[9'h124],
           _RANDOM[9'h125],
           _RANDOM[9'h126],
           _RANDOM[9'h127],
           _RANDOM[9'h128],
           _RANDOM[9'h129],
           _RANDOM[9'h12A],
           _RANDOM[9'h12B],
           _RANDOM[9'h12C],
           _RANDOM[9'h12D],
           _RANDOM[9'h12E],
           _RANDOM[9'h12F],
           _RANDOM[9'h130],
           _RANDOM[9'h131],
           _RANDOM[9'h132],
           _RANDOM[9'h133],
           _RANDOM[9'h134],
           _RANDOM[9'h135],
           _RANDOM[9'h136],
           _RANDOM[9'h137],
           _RANDOM[9'h138],
           _RANDOM[9'h139],
           _RANDOM[9'h13A],
           _RANDOM[9'h13B],
           _RANDOM[9'h13C],
           _RANDOM[9'h13D],
           _RANDOM[9'h13E],
           _RANDOM[9'h13F],
           _RANDOM[9'h140],
           _RANDOM[9'h141],
           _RANDOM[9'h142],
           _RANDOM[9'h143],
           _RANDOM[9'h144],
           _RANDOM[9'h145],
           _RANDOM[9'h146],
           _RANDOM[9'h147],
           _RANDOM[9'h148],
           _RANDOM[9'h149],
           _RANDOM[9'h14A],
           _RANDOM[9'h14B],
           _RANDOM[9'h14C],
           _RANDOM[9'h14D],
           _RANDOM[9'h14E],
           _RANDOM[9'h14F],
           _RANDOM[9'h150],
           _RANDOM[9'h151],
           _RANDOM[9'h152],
           _RANDOM[9'h153],
           _RANDOM[9'h154],
           _RANDOM[9'h155],
           _RANDOM[9'h156],
           _RANDOM[9'h157],
           _RANDOM[9'h158],
           _RANDOM[9'h159],
           _RANDOM[9'h15A],
           _RANDOM[9'h15B],
           _RANDOM[9'h15C],
           _RANDOM[9'h15D],
           _RANDOM[9'h15E],
           _RANDOM[9'h15F]};	// <stdin>:97:10, src/main/scala/operator/Powmod.scala:26:36
        mp_mod =
          {_RANDOM[9'h160],
           _RANDOM[9'h161],
           _RANDOM[9'h162],
           _RANDOM[9'h163],
           _RANDOM[9'h164],
           _RANDOM[9'h165],
           _RANDOM[9'h166],
           _RANDOM[9'h167],
           _RANDOM[9'h168],
           _RANDOM[9'h169],
           _RANDOM[9'h16A],
           _RANDOM[9'h16B],
           _RANDOM[9'h16C],
           _RANDOM[9'h16D],
           _RANDOM[9'h16E],
           _RANDOM[9'h16F],
           _RANDOM[9'h170],
           _RANDOM[9'h171],
           _RANDOM[9'h172],
           _RANDOM[9'h173],
           _RANDOM[9'h174],
           _RANDOM[9'h175],
           _RANDOM[9'h176],
           _RANDOM[9'h177],
           _RANDOM[9'h178],
           _RANDOM[9'h179],
           _RANDOM[9'h17A],
           _RANDOM[9'h17B],
           _RANDOM[9'h17C],
           _RANDOM[9'h17D],
           _RANDOM[9'h17E],
           _RANDOM[9'h17F],
           _RANDOM[9'h180],
           _RANDOM[9'h181],
           _RANDOM[9'h182],
           _RANDOM[9'h183],
           _RANDOM[9'h184],
           _RANDOM[9'h185],
           _RANDOM[9'h186],
           _RANDOM[9'h187],
           _RANDOM[9'h188],
           _RANDOM[9'h189],
           _RANDOM[9'h18A],
           _RANDOM[9'h18B],
           _RANDOM[9'h18C],
           _RANDOM[9'h18D],
           _RANDOM[9'h18E],
           _RANDOM[9'h18F],
           _RANDOM[9'h190],
           _RANDOM[9'h191],
           _RANDOM[9'h192],
           _RANDOM[9'h193],
           _RANDOM[9'h194],
           _RANDOM[9'h195],
           _RANDOM[9'h196],
           _RANDOM[9'h197],
           _RANDOM[9'h198],
           _RANDOM[9'h199],
           _RANDOM[9'h19A],
           _RANDOM[9'h19B],
           _RANDOM[9'h19C],
           _RANDOM[9'h19D],
           _RANDOM[9'h19E],
           _RANDOM[9'h19F]};	// <stdin>:97:10, src/main/scala/operator/Powmod.scala:27:36
        mp_din_valid_reg = _RANDOM[9'h1A0][0];	// <stdin>:97:10, src/main/scala/operator/Powmod.scala:28:36
        dout_valid_reg = _RANDOM[9'h1A0][4];	// <stdin>:97:10, src/main/scala/operator/Powmod.scala:28:36, :33:36
        count = _RANDOM[9'h1A0][16:5];	// <stdin>:97:10, src/main/scala/operator/Powmod.scala:28:36, :36:24
        status = {_RANDOM[9'h1A0][31:29], _RANDOM[9'h1A1][0]};	// <stdin>:97:10, src/main/scala/operator/Powmod.scala:28:36, :40:26
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:97:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:97:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ModMul mp (	// src/main/scala/operator/Powmod.scala:46:20
    .clock             (clock),
    .reset             (reset),
    .din_valid         (mp_din_valid_reg),	// src/main/scala/operator/Powmod.scala:28:36
    .din_bits_mult     (mp_mult),	// src/main/scala/operator/Powmod.scala:25:36
    .din_bits_multcand (mp_multcand),	// src/main/scala/operator/Powmod.scala:26:36
    .din_bits_mod      (mp_mod),	// src/main/scala/operator/Powmod.scala:27:36
    .dout_valid        (_mp_dout_valid),
    .dout_bits_res     (_mp_dout_bits_res)
  );
  assign din_ready = 1'h1;	// <stdin>:97:10, src/main/scala/operator/Powmod.scala:31:36
  assign dout_valid = dout_valid_reg;	// <stdin>:97:10, src/main/scala/operator/Powmod.scala:33:36
  assign dout_bits_res = res;	// <stdin>:97:10, src/main/scala/operator/Powmod.scala:23:31
endmodule

