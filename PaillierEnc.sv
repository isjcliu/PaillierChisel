// Generated by CIRCT firtool-1.59.1
module ModMul(	// <stdin>:3:3, :275:3, :547:3
  input           clock,	// <stdin>:4:11, :276:11, :548:11
                  reset,	// <stdin>:5:11, :277:11, :549:11
                  din_valid,	// src/main/scala/operator/ModMul.scala:20:18
  input  [2047:0] din_bits_mult,	// src/main/scala/operator/ModMul.scala:20:18
                  din_bits_multcand,	// src/main/scala/operator/ModMul.scala:20:18
                  din_bits_mod,	// src/main/scala/operator/ModMul.scala:20:18
  output          dout_valid,	// src/main/scala/operator/ModMul.scala:21:18
  output [2047:0] dout_bits_res	// src/main/scala/operator/ModMul.scala:21:18
);

  reg [2049:0] p;	// src/main/scala/operator/ModMul.scala:23:22
  reg [2049:0] a;	// src/main/scala/operator/ModMul.scala:24:22
  reg [2047:0] x;	// src/main/scala/operator/ModMul.scala:25:22
  reg [2047:0] y;	// src/main/scala/operator/ModMul.scala:26:22
  reg [2047:0] m;	// src/main/scala/operator/ModMul.scala:27:22
  reg [2047:0] res;	// src/main/scala/operator/ModMul.scala:28:22
  reg          dout_valid_reg;	// src/main/scala/operator/ModMul.scala:31:33
  reg [11:0]   count;	// src/main/scala/operator/ModMul.scala:34:28
  reg [2:0]    status;	// src/main/scala/operator/ModMul.scala:42:25
  always @(posedge clock) begin	// <stdin>:4:11, :276:11, :548:11
    if (reset) begin	// <stdin>:4:11, :276:11, :548:11
      p <= 2050'h0;	// src/main/scala/operator/ModMul.scala:23:22, :66:24
      a <= 2050'h0;	// src/main/scala/operator/ModMul.scala:24:22, :66:24
      x <= 2048'h0;	// src/main/scala/operator/ModMul.scala:25:22
      y <= 2048'h0;	// src/main/scala/operator/ModMul.scala:25:22, :26:22
      m <= 2048'h0;	// src/main/scala/operator/ModMul.scala:25:22, :27:22
      res <= 2048'h0;	// src/main/scala/operator/ModMul.scala:25:22, :28:22
      dout_valid_reg <= 1'h0;	// src/main/scala/operator/ModMul.scala:31:33
      count <= 12'h0;	// src/main/scala/operator/ModMul.scala:34:28, :67:24
      status <= 3'h0;	// src/main/scala/operator/ModMul.scala:42:25, :58:24
    end
    else begin	// <stdin>:4:11, :276:11, :548:11
      automatic logic            _GEN = status == 3'h0;	// src/main/scala/operator/ModMul.scala:42:25, :49:5, :58:24
      automatic logic            _GEN_0;	// src/main/scala/operator/ModMul.scala:49:5
      automatic logic            _GEN_1;	// src/main/scala/operator/ModMul.scala:49:5
      automatic logic            _GEN_2;	// src/main/scala/operator/ModMul.scala:49:5
      automatic logic [2049:0]   _GEN_3;	// src/main/scala/operator/ModMul.scala:77:36
      automatic logic            _GEN_4 = status == 3'h4;	// src/main/scala/operator/ModMul.scala:42:25, :49:5, :79:20
      automatic logic            _GEN_5 = count == 12'h800;	// src/main/scala/operator/ModMul.scala:34:28, :35:28, :83:24
      automatic logic [7:0][2:0] _GEN_6 =
        {{status},
         {status},
         {3'h0},
         {_GEN_5 ? 3'h5 : 3'h2},
         {3'h4},
         {3'h3},
         {3'h2},
         {{2'h0, din_valid}}};	// src/main/scala/operator/ModMul.scala:42:25, :49:5, :54:13, :55:24, :58:24, :68:24, :73:20, :79:20, :83:24, :84:13, :86:24, :89:24, :95:20
      _GEN_0 = status == 3'h1;	// src/main/scala/operator/ModMul.scala:42:25, :49:5, :55:24
      _GEN_1 = status == 3'h2;	// src/main/scala/operator/ModMul.scala:42:25, :49:5, :68:24
      _GEN_2 = status == 3'h3;	// src/main/scala/operator/ModMul.scala:42:25, :49:5, :73:20
      _GEN_3 = {2'h0, m};	// src/main/scala/operator/ModMul.scala:27:22, :42:25, :77:36
      if (~_GEN) begin	// src/main/scala/operator/ModMul.scala:49:5, :52:28
        if (_GEN_0) begin	// src/main/scala/operator/ModMul.scala:49:5
          p <= 2050'h0;	// src/main/scala/operator/ModMul.scala:23:22, :66:24
          count <= 12'h0;	// src/main/scala/operator/ModMul.scala:34:28, :67:24
        end
        else if (_GEN_1 | ~_GEN_2) begin	// src/main/scala/operator/ModMul.scala:23:22, :34:28, :49:5
        end
        else begin	// src/main/scala/operator/ModMul.scala:34:28, :49:5
          automatic logic [2049:0] _p_T_1;	// src/main/scala/operator/ModMul.scala:77:36
          _p_T_1 = a + _GEN_3;	// src/main/scala/operator/ModMul.scala:24:22, :77:36
          p <= {1'h0, a[0] ? _p_T_1[2049:1] : a[2049:1]};	// src/main/scala/operator/ModMul.scala:23:22, :24:22, :30:33, :31:33, :77:{26,28,36,41,51}
          count <= count + 12'h1;	// src/main/scala/operator/ModMul.scala:34:28, :78:29
        end
      end
      if (_GEN | _GEN_0 | ~_GEN_1) begin	// src/main/scala/operator/ModMul.scala:24:22, :49:5
      end
      else begin	// src/main/scala/operator/ModMul.scala:24:22, :49:5
        automatic logic [2047:0] _a_T = x >> count;	// src/main/scala/operator/ModMul.scala:25:22, :34:28, :72:32
        a <= p + {2'h0, _a_T[0] ? y : 2048'h0};	// src/main/scala/operator/ModMul.scala:23:22, :24:22, :25:22, :26:22, :42:25, :72:{25,30,32}
      end
      if (_GEN | ~_GEN_0) begin	// src/main/scala/operator/ModMul.scala:25:22, :27:22, :49:5
      end
      else begin	// src/main/scala/operator/ModMul.scala:27:22, :49:5
        x <= din_bits_mult;	// src/main/scala/operator/ModMul.scala:25:22
        y <= din_bits_multcand;	// src/main/scala/operator/ModMul.scala:26:22
        m <= din_bits_mod;	// src/main/scala/operator/ModMul.scala:27:22
      end
      if (_GEN | _GEN_0 | _GEN_1 | _GEN_2 | ~(_GEN_4 & _GEN_5)) begin	// src/main/scala/operator/ModMul.scala:28:22, :49:5, :83:24, :84:13, :85:24
      end
      else	// src/main/scala/operator/ModMul.scala:28:22, :49:5
        res <= p > _GEN_3 ? p[2047:0] - m : p[2047:0];	// src/main/scala/operator/ModMul.scala:23:22, :27:22, :28:22, :77:36, :85:{30,33,40}
      dout_valid_reg <=
        ~_GEN & (~(_GEN_0 | _GEN_1 | _GEN_2 | _GEN_4) & status == 3'h5 | dout_valid_reg);	// src/main/scala/operator/ModMul.scala:31:33, :42:25, :49:5, :52:28, :86:24
      status <= _GEN_6[status];	// src/main/scala/operator/ModMul.scala:42:25, :49:5, :54:13, :68:24, :73:20, :79:20, :84:13, :95:20
    end
  end // always @(posedge)
  assign dout_valid = dout_valid_reg;	// <stdin>:3:3, :275:3, :547:3, src/main/scala/operator/ModMul.scala:31:33
  assign dout_bits_res = res;	// <stdin>:3:3, :275:3, :547:3, src/main/scala/operator/ModMul.scala:28:22
endmodule

module Powmod(	// <stdin>:109:3
  input           clock,	// <stdin>:110:11
                  reset,	// <stdin>:111:11
                  din_valid,	// src/main/scala/operator/Powmod.scala:20:18
  input  [1023:0] din_bits_base,	// src/main/scala/operator/Powmod.scala:20:18
  input  [255:0]  din_bits_exp,	// src/main/scala/operator/Powmod.scala:20:18
  input  [2047:0] din_bits_mod,	// src/main/scala/operator/Powmod.scala:20:18
                  din_bits_expkm,	// src/main/scala/operator/Powmod.scala:20:18
                  din_bits_exp2km,	// src/main/scala/operator/Powmod.scala:20:18
  output          dout_valid,	// src/main/scala/operator/Powmod.scala:21:18
  output [2047:0] dout_bits_res	// src/main/scala/operator/Powmod.scala:21:18
);

  wire          _mp_dout_valid;	// src/main/scala/operator/Powmod.scala:53:20
  wire [2047:0] _mp_dout_bits_res;	// src/main/scala/operator/Powmod.scala:53:20
  reg  [255:0]  x;	// src/main/scala/operator/Powmod.scala:23:31
  reg  [2047:0] e;	// src/main/scala/operator/Powmod.scala:24:31
  reg  [2047:0] ty;	// src/main/scala/operator/Powmod.scala:25:31
  reg  [2047:0] res;	// src/main/scala/operator/Powmod.scala:26:31
  reg  [2047:0] mp_mult;	// src/main/scala/operator/Powmod.scala:28:36
  reg  [2047:0] mp_multcand;	// src/main/scala/operator/Powmod.scala:29:36
  reg  [2047:0] mp_mod;	// src/main/scala/operator/Powmod.scala:30:36
  reg           mp_din_valid_reg;	// src/main/scala/operator/Powmod.scala:31:36
  reg           dout_valid_reg;	// src/main/scala/operator/Powmod.scala:36:36
  reg  [11:0]   count;	// src/main/scala/operator/Powmod.scala:39:24
  reg  [3:0]    status;	// src/main/scala/operator/Powmod.scala:47:26
  always @(posedge clock) begin	// <stdin>:110:11
    if (reset) begin	// <stdin>:110:11
      x <= 256'h0;	// src/main/scala/operator/Powmod.scala:23:31
      e <= 2048'h0;	// src/main/scala/operator/Powmod.scala:24:31
      ty <= 2048'h0;	// src/main/scala/operator/Powmod.scala:24:31, :25:31
      res <= 2048'h0;	// src/main/scala/operator/Powmod.scala:24:31, :26:31
      mp_mult <= 2048'h0;	// src/main/scala/operator/Powmod.scala:24:31, :28:36
      mp_multcand <= 2048'h0;	// src/main/scala/operator/Powmod.scala:24:31, :29:36
      mp_mod <= 2048'h0;	// src/main/scala/operator/Powmod.scala:24:31, :30:36
      mp_din_valid_reg <= 1'h0;	// src/main/scala/operator/Powmod.scala:31:36
      dout_valid_reg <= 1'h0;	// src/main/scala/operator/Powmod.scala:31:36, :36:36
      count <= 12'h0;	// src/main/scala/operator/Powmod.scala:39:24, :80:30
      status <= 4'h0;	// src/main/scala/operator/Powmod.scala:47:26, :69:24
    end
    else begin	// <stdin>:110:11
      automatic logic             _GEN = status == 4'h0;	// src/main/scala/operator/Powmod.scala:47:26, :60:5, :69:24
      automatic logic             _GEN_0;	// src/main/scala/operator/Powmod.scala:60:5
      automatic logic             _GEN_1;	// src/main/scala/operator/Powmod.scala:23:31, :60:5
      automatic logic             _GEN_2;	// src/main/scala/operator/Powmod.scala:60:5
      automatic logic             _GEN_3;	// src/main/scala/operator/Powmod.scala:60:5
      automatic logic             _GEN_4;	// src/main/scala/operator/Powmod.scala:60:5
      automatic logic             _GEN_5;	// src/main/scala/operator/Powmod.scala:60:5
      automatic logic             _GEN_6;	// src/main/scala/operator/Powmod.scala:60:5
      automatic logic             _GEN_7;	// src/main/scala/operator/Powmod.scala:60:5
      automatic logic             _GEN_8;	// src/main/scala/operator/Powmod.scala:25:31, :60:5, :140:13, :141:24
      automatic logic             _GEN_9;	// src/main/scala/operator/Powmod.scala:25:31, :60:5
      automatic logic             _GEN_10;	// src/main/scala/operator/Powmod.scala:60:5
      automatic logic             _GEN_11;	// src/main/scala/operator/Powmod.scala:60:5
      automatic logic             _GEN_12;	// src/main/scala/operator/Powmod.scala:26:31, :60:5, :160:13, :161:32
      automatic logic             _GEN_13;	// src/main/scala/operator/Powmod.scala:26:31, :60:5
      automatic logic [255:0]     _GEN_14 = x >> count;	// src/main/scala/operator/Powmod.scala:23:31, :39:24, :102:23
      automatic logic [15:0][3:0] _GEN_15 =
        {{status},
         {status},
         {status},
         {status},
         {status},
         {status},
         {_mp_dout_valid ? 4'h0 : 4'h9},
         {4'h9},
         {{1'h0, ~_mp_dout_valid, 2'h3}},
         {4'h7},
         {_mp_dout_valid ? 4'h6 : 4'h5},
         {4'h5},
         {count == 12'h800 ? 4'h8 : {2'h1, ~(_GEN_14[0]), 1'h0}},
         {{3'h1, _mp_dout_valid}},
         {4'h2},
         {{3'h0, din_valid}}};	// src/main/scala/operator/Powmod.scala:31:36, :39:24, :40:28, :47:26, :53:20, :60:5, :65:13, :66:24, :69:24, :81:30, :86:13, :88:24, :92:34, :97:24, :98:13, :99:24, :102:23, :103:17, :104:28, :107:28, :116:30, :121:13, :123:24, :127:34, :135:34, :140:13, :143:24, :147:34, :155:30, :160:13, :163:32, :167:34
      _GEN_0 = status == 4'h1;	// src/main/scala/operator/Powmod.scala:47:26, :60:5, :66:24
      _GEN_1 = _GEN | ~_GEN_0;	// src/main/scala/operator/Powmod.scala:23:31, :60:5
      _GEN_2 = status == 4'h2;	// src/main/scala/operator/Powmod.scala:47:26, :60:5, :81:30
      _GEN_3 = status == 4'h3;	// src/main/scala/operator/Powmod.scala:47:26, :60:5, :88:24
      _GEN_4 = status == 4'h4;	// src/main/scala/operator/Powmod.scala:47:26, :60:5, :104:28
      _GEN_5 = status == 4'h5;	// src/main/scala/operator/Powmod.scala:47:26, :60:5, :116:30
      _GEN_6 = status == 4'h6;	// src/main/scala/operator/Powmod.scala:47:26, :60:5, :107:28
      _GEN_7 = status == 4'h7;	// src/main/scala/operator/Powmod.scala:47:26, :60:5, :135:34
      _GEN_8 = _GEN_7 & _mp_dout_valid;	// src/main/scala/operator/Powmod.scala:25:31, :53:20, :60:5, :140:13, :141:24
      _GEN_9 = _GEN_3 | _GEN_4 | _GEN_5 | _GEN_6;	// src/main/scala/operator/Powmod.scala:25:31, :60:5
      _GEN_10 = status == 4'h8;	// src/main/scala/operator/Powmod.scala:47:26, :60:5, :99:24
      _GEN_11 = status == 4'h9;	// src/main/scala/operator/Powmod.scala:47:26, :60:5, :155:30
      _GEN_12 = _GEN_11 & _mp_dout_valid;	// src/main/scala/operator/Powmod.scala:26:31, :53:20, :60:5, :160:13, :161:32
      _GEN_13 = _GEN_0 | _GEN_2 | _GEN_3 | _GEN_4 | _GEN_5 | _GEN_6 | _GEN_7 | _GEN_10;	// src/main/scala/operator/Powmod.scala:26:31, :60:5
      if (_GEN_1) begin	// src/main/scala/operator/Powmod.scala:23:31, :60:5
      end
      else	// src/main/scala/operator/Powmod.scala:23:31, :60:5
        x <= din_bits_exp;	// src/main/scala/operator/Powmod.scala:23:31
      if (~_GEN) begin	// src/main/scala/operator/Powmod.scala:60:5, :63:28
        automatic logic _GEN_16 = _mp_dout_valid & mp_din_valid_reg;	// src/main/scala/operator/Powmod.scala:31:36, :53:20, :86:13, :91:34
        if (_GEN_0) begin	// src/main/scala/operator/Powmod.scala:60:5
          e <= din_bits_expkm;	// src/main/scala/operator/Powmod.scala:24:31
          mp_mult <= {1024'h0, din_bits_base};	// src/main/scala/operator/Powmod.scala:28:36, :77:30
          mp_multcand <= din_bits_exp2km;	// src/main/scala/operator/Powmod.scala:29:36
          count <= 12'h0;	// src/main/scala/operator/Powmod.scala:39:24, :80:30
        end
        else begin	// src/main/scala/operator/Powmod.scala:60:5
          if (_GEN_2 | _GEN_3 | _GEN_4 | ~(_GEN_5 & _mp_dout_valid)) begin	// src/main/scala/operator/Powmod.scala:24:31, :53:20, :60:5, :121:13, :122:24
          end
          else	// src/main/scala/operator/Powmod.scala:24:31, :60:5
            e <= _mp_dout_bits_res;	// src/main/scala/operator/Powmod.scala:24:31, :53:20
          if (~(_GEN_2 | _GEN_3)) begin	// src/main/scala/operator/Powmod.scala:28:36, :60:5
            if (_GEN_4) begin	// src/main/scala/operator/Powmod.scala:60:5
              mp_mult <= e;	// src/main/scala/operator/Powmod.scala:24:31, :28:36
              mp_multcand <= ty;	// src/main/scala/operator/Powmod.scala:25:31, :29:36
            end
            else if (~_GEN_5) begin	// src/main/scala/operator/Powmod.scala:60:5
              if (_GEN_6) begin	// src/main/scala/operator/Powmod.scala:60:5
                mp_mult <= ty;	// src/main/scala/operator/Powmod.scala:25:31, :28:36
                mp_multcand <= ty;	// src/main/scala/operator/Powmod.scala:25:31, :29:36
              end
              else if (_GEN_7 | ~_GEN_10) begin	// src/main/scala/operator/Powmod.scala:28:36, :29:36, :60:5
              end
              else begin	// src/main/scala/operator/Powmod.scala:29:36, :60:5
                mp_mult <= e;	// src/main/scala/operator/Powmod.scala:24:31, :28:36
                mp_multcand <= 2048'h1;	// src/main/scala/operator/Powmod.scala:29:36, :153:30
              end
            end
          end
          if (_GEN_2 | _GEN_9 | ~_GEN_8) begin	// src/main/scala/operator/Powmod.scala:25:31, :39:24, :60:5, :140:13, :141:24
          end
          else	// src/main/scala/operator/Powmod.scala:39:24, :60:5
            count <= count + 12'h1;	// src/main/scala/operator/Powmod.scala:39:24, :142:33
        end
        mp_din_valid_reg <=
          _GEN_0
          | (_GEN_2
               ? _GEN_16
               : _GEN_3
                   ? mp_din_valid_reg
                   : _GEN_4
                     | (_GEN_5
                          ? _GEN_16
                          : _GEN_6
                            | (_GEN_7
                                 ? _GEN_16
                                 : _GEN_10 | (~_GEN_11 | _mp_dout_valid)
                                   & mp_din_valid_reg)));	// src/main/scala/operator/Powmod.scala:31:36, :53:20, :60:5, :74:30, :86:13, :91:34, :113:30, :121:13, :134:34, :140:13, :154:30, :160:13
      end
      if (~(_GEN | _GEN_0)) begin	// src/main/scala/operator/Powmod.scala:25:31, :60:5
        if (_GEN_2) begin	// src/main/scala/operator/Powmod.scala:60:5
          if (_mp_dout_valid)	// src/main/scala/operator/Powmod.scala:53:20
            ty <= _mp_dout_bits_res;	// src/main/scala/operator/Powmod.scala:25:31, :53:20
        end
        else if (_GEN_9 | ~_GEN_8) begin	// src/main/scala/operator/Powmod.scala:25:31, :60:5, :140:13, :141:24
        end
        else	// src/main/scala/operator/Powmod.scala:25:31, :60:5
          ty <= _mp_dout_bits_res;	// src/main/scala/operator/Powmod.scala:25:31, :53:20
      end
      if (_GEN | _GEN_13 | ~_GEN_12) begin	// src/main/scala/operator/Powmod.scala:26:31, :60:5, :160:13, :161:32
      end
      else	// src/main/scala/operator/Powmod.scala:26:31, :60:5
        res <= _mp_dout_bits_res;	// src/main/scala/operator/Powmod.scala:26:31, :53:20
      if (_GEN_1) begin	// src/main/scala/operator/Powmod.scala:23:31, :30:36, :60:5
      end
      else	// src/main/scala/operator/Powmod.scala:30:36, :60:5
        mp_mod <= din_bits_mod;	// src/main/scala/operator/Powmod.scala:30:36
      dout_valid_reg <= ~_GEN & (~_GEN_13 & _GEN_12 | dout_valid_reg);	// src/main/scala/operator/Powmod.scala:26:31, :36:36, :60:5, :63:28, :160:13, :161:32
      status <= _GEN_15[status];	// src/main/scala/operator/Powmod.scala:47:26, :60:5, :65:13, :81:30, :86:13, :98:13, :116:30, :121:13, :135:34, :140:13, :155:30, :160:13
    end
  end // always @(posedge)
  ModMul mp (	// src/main/scala/operator/Powmod.scala:53:20
    .clock             (clock),
    .reset             (reset),
    .din_valid         (mp_din_valid_reg),	// src/main/scala/operator/Powmod.scala:31:36
    .din_bits_mult     (mp_mult),	// src/main/scala/operator/Powmod.scala:28:36
    .din_bits_multcand (mp_multcand),	// src/main/scala/operator/Powmod.scala:29:36
    .din_bits_mod      (mp_mod),	// src/main/scala/operator/Powmod.scala:30:36
    .dout_valid        (_mp_dout_valid),
    .dout_bits_res     (_mp_dout_bits_res)
  );
  assign dout_valid = dout_valid_reg;	// <stdin>:109:3, src/main/scala/operator/Powmod.scala:36:36
  assign dout_bits_res = res;	// <stdin>:109:3, src/main/scala/operator/Powmod.scala:26:31
endmodule

module Powmod_1(	// <stdin>:381:3
  input           clock,	// <stdin>:382:11
                  reset,	// <stdin>:383:11
                  din_valid,	// src/main/scala/operator/Powmod.scala:20:18
  input  [1023:0] din_bits_base,	// src/main/scala/operator/Powmod.scala:20:18
                  din_bits_exp,	// src/main/scala/operator/Powmod.scala:20:18
  input  [2047:0] din_bits_mod,	// src/main/scala/operator/Powmod.scala:20:18
                  din_bits_expkm,	// src/main/scala/operator/Powmod.scala:20:18
                  din_bits_exp2km,	// src/main/scala/operator/Powmod.scala:20:18
  output          dout_valid,	// src/main/scala/operator/Powmod.scala:21:18
  output [2047:0] dout_bits_res	// src/main/scala/operator/Powmod.scala:21:18
);

  wire          _mp_dout_valid;	// src/main/scala/operator/Powmod.scala:53:20
  wire [2047:0] _mp_dout_bits_res;	// src/main/scala/operator/Powmod.scala:53:20
  reg  [1023:0] x;	// src/main/scala/operator/Powmod.scala:23:31
  reg  [2047:0] e;	// src/main/scala/operator/Powmod.scala:24:31
  reg  [2047:0] ty;	// src/main/scala/operator/Powmod.scala:25:31
  reg  [2047:0] res;	// src/main/scala/operator/Powmod.scala:26:31
  reg  [2047:0] mp_mult;	// src/main/scala/operator/Powmod.scala:28:36
  reg  [2047:0] mp_multcand;	// src/main/scala/operator/Powmod.scala:29:36
  reg  [2047:0] mp_mod;	// src/main/scala/operator/Powmod.scala:30:36
  reg           mp_din_valid_reg;	// src/main/scala/operator/Powmod.scala:31:36
  reg           dout_valid_reg;	// src/main/scala/operator/Powmod.scala:36:36
  reg  [11:0]   count;	// src/main/scala/operator/Powmod.scala:39:24
  reg  [3:0]    status;	// src/main/scala/operator/Powmod.scala:47:26
  always @(posedge clock) begin	// <stdin>:382:11
    if (reset) begin	// <stdin>:382:11
      x <= 1024'h0;	// src/main/scala/operator/Powmod.scala:23:31
      e <= 2048'h0;	// src/main/scala/operator/Powmod.scala:24:31
      ty <= 2048'h0;	// src/main/scala/operator/Powmod.scala:24:31, :25:31
      res <= 2048'h0;	// src/main/scala/operator/Powmod.scala:24:31, :26:31
      mp_mult <= 2048'h0;	// src/main/scala/operator/Powmod.scala:24:31, :28:36
      mp_multcand <= 2048'h0;	// src/main/scala/operator/Powmod.scala:24:31, :29:36
      mp_mod <= 2048'h0;	// src/main/scala/operator/Powmod.scala:24:31, :30:36
      mp_din_valid_reg <= 1'h0;	// src/main/scala/operator/Powmod.scala:31:36
      dout_valid_reg <= 1'h0;	// src/main/scala/operator/Powmod.scala:31:36, :36:36
      count <= 12'h0;	// src/main/scala/operator/Powmod.scala:39:24, :80:30
      status <= 4'h0;	// src/main/scala/operator/Powmod.scala:47:26, :69:24
    end
    else begin	// <stdin>:382:11
      automatic logic             _GEN = status == 4'h0;	// src/main/scala/operator/Powmod.scala:47:26, :60:5, :69:24
      automatic logic             _GEN_0;	// src/main/scala/operator/Powmod.scala:60:5
      automatic logic             _GEN_1;	// src/main/scala/operator/Powmod.scala:23:31, :60:5
      automatic logic             _GEN_2;	// src/main/scala/operator/Powmod.scala:60:5
      automatic logic             _GEN_3;	// src/main/scala/operator/Powmod.scala:60:5
      automatic logic             _GEN_4;	// src/main/scala/operator/Powmod.scala:60:5
      automatic logic             _GEN_5;	// src/main/scala/operator/Powmod.scala:60:5
      automatic logic             _GEN_6;	// src/main/scala/operator/Powmod.scala:60:5
      automatic logic             _GEN_7;	// src/main/scala/operator/Powmod.scala:60:5
      automatic logic             _GEN_8;	// src/main/scala/operator/Powmod.scala:25:31, :60:5, :140:13, :141:24
      automatic logic             _GEN_9;	// src/main/scala/operator/Powmod.scala:25:31, :60:5
      automatic logic             _GEN_10;	// src/main/scala/operator/Powmod.scala:60:5
      automatic logic             _GEN_11;	// src/main/scala/operator/Powmod.scala:60:5
      automatic logic             _GEN_12;	// src/main/scala/operator/Powmod.scala:26:31, :60:5, :160:13, :161:32
      automatic logic             _GEN_13;	// src/main/scala/operator/Powmod.scala:26:31, :60:5
      automatic logic [1023:0]    _GEN_14 = x >> count;	// src/main/scala/operator/Powmod.scala:23:31, :39:24, :102:23
      automatic logic [15:0][3:0] _GEN_15 =
        {{status},
         {status},
         {status},
         {status},
         {status},
         {status},
         {_mp_dout_valid ? 4'h0 : 4'h9},
         {4'h9},
         {{1'h0, ~_mp_dout_valid, 2'h3}},
         {4'h7},
         {_mp_dout_valid ? 4'h6 : 4'h5},
         {4'h5},
         {count == 12'h800 ? 4'h8 : {2'h1, ~(_GEN_14[0]), 1'h0}},
         {{3'h1, _mp_dout_valid}},
         {4'h2},
         {{3'h0, din_valid}}};	// src/main/scala/operator/Powmod.scala:31:36, :39:24, :40:28, :47:26, :53:20, :60:5, :65:13, :66:24, :69:24, :81:30, :86:13, :88:24, :92:34, :97:24, :98:13, :99:24, :102:23, :103:17, :104:28, :107:28, :116:30, :121:13, :123:24, :127:34, :135:34, :140:13, :143:24, :147:34, :155:30, :160:13, :163:32, :167:34
      _GEN_0 = status == 4'h1;	// src/main/scala/operator/Powmod.scala:47:26, :60:5, :66:24
      _GEN_1 = _GEN | ~_GEN_0;	// src/main/scala/operator/Powmod.scala:23:31, :60:5
      _GEN_2 = status == 4'h2;	// src/main/scala/operator/Powmod.scala:47:26, :60:5, :81:30
      _GEN_3 = status == 4'h3;	// src/main/scala/operator/Powmod.scala:47:26, :60:5, :88:24
      _GEN_4 = status == 4'h4;	// src/main/scala/operator/Powmod.scala:47:26, :60:5, :104:28
      _GEN_5 = status == 4'h5;	// src/main/scala/operator/Powmod.scala:47:26, :60:5, :116:30
      _GEN_6 = status == 4'h6;	// src/main/scala/operator/Powmod.scala:47:26, :60:5, :107:28
      _GEN_7 = status == 4'h7;	// src/main/scala/operator/Powmod.scala:47:26, :60:5, :135:34
      _GEN_8 = _GEN_7 & _mp_dout_valid;	// src/main/scala/operator/Powmod.scala:25:31, :53:20, :60:5, :140:13, :141:24
      _GEN_9 = _GEN_3 | _GEN_4 | _GEN_5 | _GEN_6;	// src/main/scala/operator/Powmod.scala:25:31, :60:5
      _GEN_10 = status == 4'h8;	// src/main/scala/operator/Powmod.scala:47:26, :60:5, :99:24
      _GEN_11 = status == 4'h9;	// src/main/scala/operator/Powmod.scala:47:26, :60:5, :155:30
      _GEN_12 = _GEN_11 & _mp_dout_valid;	// src/main/scala/operator/Powmod.scala:26:31, :53:20, :60:5, :160:13, :161:32
      _GEN_13 = _GEN_0 | _GEN_2 | _GEN_3 | _GEN_4 | _GEN_5 | _GEN_6 | _GEN_7 | _GEN_10;	// src/main/scala/operator/Powmod.scala:26:31, :60:5
      if (_GEN_1) begin	// src/main/scala/operator/Powmod.scala:23:31, :60:5
      end
      else	// src/main/scala/operator/Powmod.scala:23:31, :60:5
        x <= din_bits_exp;	// src/main/scala/operator/Powmod.scala:23:31
      if (~_GEN) begin	// src/main/scala/operator/Powmod.scala:60:5, :63:28
        automatic logic _GEN_16 = _mp_dout_valid & mp_din_valid_reg;	// src/main/scala/operator/Powmod.scala:31:36, :53:20, :86:13, :91:34
        if (_GEN_0) begin	// src/main/scala/operator/Powmod.scala:60:5
          e <= din_bits_expkm;	// src/main/scala/operator/Powmod.scala:24:31
          mp_mult <= {1024'h0, din_bits_base};	// src/main/scala/operator/Powmod.scala:23:31, :28:36, :77:30
          mp_multcand <= din_bits_exp2km;	// src/main/scala/operator/Powmod.scala:29:36
          count <= 12'h0;	// src/main/scala/operator/Powmod.scala:39:24, :80:30
        end
        else begin	// src/main/scala/operator/Powmod.scala:60:5
          if (_GEN_2 | _GEN_3 | _GEN_4 | ~(_GEN_5 & _mp_dout_valid)) begin	// src/main/scala/operator/Powmod.scala:24:31, :53:20, :60:5, :121:13, :122:24
          end
          else	// src/main/scala/operator/Powmod.scala:24:31, :60:5
            e <= _mp_dout_bits_res;	// src/main/scala/operator/Powmod.scala:24:31, :53:20
          if (~(_GEN_2 | _GEN_3)) begin	// src/main/scala/operator/Powmod.scala:28:36, :60:5
            if (_GEN_4) begin	// src/main/scala/operator/Powmod.scala:60:5
              mp_mult <= e;	// src/main/scala/operator/Powmod.scala:24:31, :28:36
              mp_multcand <= ty;	// src/main/scala/operator/Powmod.scala:25:31, :29:36
            end
            else if (~_GEN_5) begin	// src/main/scala/operator/Powmod.scala:60:5
              if (_GEN_6) begin	// src/main/scala/operator/Powmod.scala:60:5
                mp_mult <= ty;	// src/main/scala/operator/Powmod.scala:25:31, :28:36
                mp_multcand <= ty;	// src/main/scala/operator/Powmod.scala:25:31, :29:36
              end
              else if (_GEN_7 | ~_GEN_10) begin	// src/main/scala/operator/Powmod.scala:28:36, :29:36, :60:5
              end
              else begin	// src/main/scala/operator/Powmod.scala:29:36, :60:5
                mp_mult <= e;	// src/main/scala/operator/Powmod.scala:24:31, :28:36
                mp_multcand <= 2048'h1;	// src/main/scala/operator/Powmod.scala:29:36, :153:30
              end
            end
          end
          if (_GEN_2 | _GEN_9 | ~_GEN_8) begin	// src/main/scala/operator/Powmod.scala:25:31, :39:24, :60:5, :140:13, :141:24
          end
          else	// src/main/scala/operator/Powmod.scala:39:24, :60:5
            count <= count + 12'h1;	// src/main/scala/operator/Powmod.scala:39:24, :142:33
        end
        mp_din_valid_reg <=
          _GEN_0
          | (_GEN_2
               ? _GEN_16
               : _GEN_3
                   ? mp_din_valid_reg
                   : _GEN_4
                     | (_GEN_5
                          ? _GEN_16
                          : _GEN_6
                            | (_GEN_7
                                 ? _GEN_16
                                 : _GEN_10 | (~_GEN_11 | _mp_dout_valid)
                                   & mp_din_valid_reg)));	// src/main/scala/operator/Powmod.scala:31:36, :53:20, :60:5, :74:30, :86:13, :91:34, :113:30, :121:13, :134:34, :140:13, :154:30, :160:13
      end
      if (~(_GEN | _GEN_0)) begin	// src/main/scala/operator/Powmod.scala:25:31, :60:5
        if (_GEN_2) begin	// src/main/scala/operator/Powmod.scala:60:5
          if (_mp_dout_valid)	// src/main/scala/operator/Powmod.scala:53:20
            ty <= _mp_dout_bits_res;	// src/main/scala/operator/Powmod.scala:25:31, :53:20
        end
        else if (_GEN_9 | ~_GEN_8) begin	// src/main/scala/operator/Powmod.scala:25:31, :60:5, :140:13, :141:24
        end
        else	// src/main/scala/operator/Powmod.scala:25:31, :60:5
          ty <= _mp_dout_bits_res;	// src/main/scala/operator/Powmod.scala:25:31, :53:20
      end
      if (_GEN | _GEN_13 | ~_GEN_12) begin	// src/main/scala/operator/Powmod.scala:26:31, :60:5, :160:13, :161:32
      end
      else	// src/main/scala/operator/Powmod.scala:26:31, :60:5
        res <= _mp_dout_bits_res;	// src/main/scala/operator/Powmod.scala:26:31, :53:20
      if (_GEN_1) begin	// src/main/scala/operator/Powmod.scala:23:31, :30:36, :60:5
      end
      else	// src/main/scala/operator/Powmod.scala:30:36, :60:5
        mp_mod <= din_bits_mod;	// src/main/scala/operator/Powmod.scala:30:36
      dout_valid_reg <= ~_GEN & (~_GEN_13 & _GEN_12 | dout_valid_reg);	// src/main/scala/operator/Powmod.scala:26:31, :36:36, :60:5, :63:28, :160:13, :161:32
      status <= _GEN_15[status];	// src/main/scala/operator/Powmod.scala:47:26, :60:5, :65:13, :81:30, :86:13, :98:13, :116:30, :121:13, :135:34, :140:13, :155:30, :160:13
    end
  end // always @(posedge)
  ModMul mp (	// src/main/scala/operator/Powmod.scala:53:20
    .clock             (clock),
    .reset             (reset),
    .din_valid         (mp_din_valid_reg),	// src/main/scala/operator/Powmod.scala:31:36
    .din_bits_mult     (mp_mult),	// src/main/scala/operator/Powmod.scala:28:36
    .din_bits_multcand (mp_multcand),	// src/main/scala/operator/Powmod.scala:29:36
    .din_bits_mod      (mp_mod),	// src/main/scala/operator/Powmod.scala:30:36
    .dout_valid        (_mp_dout_valid),
    .dout_bits_res     (_mp_dout_bits_res)
  );
  assign dout_valid = dout_valid_reg;	// <stdin>:381:3, src/main/scala/operator/Powmod.scala:36:36
  assign dout_bits_res = res;	// <stdin>:381:3, src/main/scala/operator/Powmod.scala:26:31
endmodule

module PaillierEnc(	// <stdin>:653:3
  input           clock,	// <stdin>:654:11
                  reset,	// <stdin>:655:11
  output          din_ready,	// src/main/scala/operator/Encrypt.scala:25:17
  input           din_valid,	// src/main/scala/operator/Encrypt.scala:25:17
  input  [1023:0] din_bits_g,	// src/main/scala/operator/Encrypt.scala:25:17
  input  [255:0]  din_bits_m,	// src/main/scala/operator/Encrypt.scala:25:17
  input  [1023:0] din_bits_r,	// src/main/scala/operator/Encrypt.scala:25:17
                  din_bits_n,	// src/main/scala/operator/Encrypt.scala:25:17
  input  [2047:0] din_bits_mod,	// src/main/scala/operator/Encrypt.scala:25:17
                  din_bits_param_expkm,	// src/main/scala/operator/Encrypt.scala:25:17
                  din_bits_param_exp2km,	// src/main/scala/operator/Encrypt.scala:25:17
  output          dout_valid,	// src/main/scala/operator/Encrypt.scala:26:18
  output [2047:0] dout_bits_res	// src/main/scala/operator/Encrypt.scala:26:18
);

  wire          _mp_dout_valid;	// src/main/scala/operator/Encrypt.scala:58:20
  wire [2047:0] _mp_dout_bits_res;	// src/main/scala/operator/Encrypt.scala:58:20
  wire          _pm2_dout_valid;	// src/main/scala/operator/Encrypt.scala:47:21
  wire [2047:0] _pm2_dout_bits_res;	// src/main/scala/operator/Encrypt.scala:47:21
  wire          _pm1_dout_valid;	// src/main/scala/operator/Encrypt.scala:38:21
  wire [2047:0] _pm1_dout_bits_res;	// src/main/scala/operator/Encrypt.scala:38:21
  reg  [1023:0] g;	// src/main/scala/operator/Encrypt.scala:28:26
  reg  [255:0]  m;	// src/main/scala/operator/Encrypt.scala:29:26
  reg  [1023:0] r;	// src/main/scala/operator/Encrypt.scala:30:26
  reg  [1023:0] n;	// src/main/scala/operator/Encrypt.scala:31:26
  reg  [2047:0] mod;	// src/main/scala/operator/Encrypt.scala:32:26
  reg  [2047:0] expkm;	// src/main/scala/operator/Encrypt.scala:33:26
  reg  [2047:0] exp2km;	// src/main/scala/operator/Encrypt.scala:34:26
  reg  [2047:0] res;	// src/main/scala/operator/Encrypt.scala:35:26
  reg           pm1_din_valid_reg;	// src/main/scala/operator/Encrypt.scala:37:36
  reg           pm2_din_valid_reg;	// src/main/scala/operator/Encrypt.scala:46:36
  reg           mp_din_valid_reg;	// src/main/scala/operator/Encrypt.scala:55:35
  reg  [2047:0] mp_mult;	// src/main/scala/operator/Encrypt.scala:56:35
  reg  [2047:0] mp_multcand;	// src/main/scala/operator/Encrypt.scala:57:35
  reg           running;	// src/main/scala/operator/Encrypt.scala:64:33
  reg           mp_valid_1;	// src/main/scala/operator/Encrypt.scala:65:33
  reg           mp_valid_2;	// src/main/scala/operator/Encrypt.scala:66:33
  reg           dout_valid_reg;	// src/main/scala/operator/Encrypt.scala:69:33
  always @(posedge clock) begin	// <stdin>:654:11
    if (reset) begin	// <stdin>:654:11
      g <= 1024'h0;	// src/main/scala/operator/Encrypt.scala:28:26
      m <= 256'h0;	// src/main/scala/operator/Encrypt.scala:29:26
      r <= 1024'h0;	// src/main/scala/operator/Encrypt.scala:28:26, :30:26
      n <= 1024'h0;	// src/main/scala/operator/Encrypt.scala:28:26, :31:26
      mod <= 2048'h0;	// src/main/scala/operator/Encrypt.scala:32:26
      expkm <= 2048'h0;	// src/main/scala/operator/Encrypt.scala:32:26, :33:26
      exp2km <= 2048'h0;	// src/main/scala/operator/Encrypt.scala:32:26, :34:26
      res <= 2048'h0;	// src/main/scala/operator/Encrypt.scala:32:26, :35:26
      pm1_din_valid_reg <= 1'h0;	// src/main/scala/operator/Encrypt.scala:37:36
      pm2_din_valid_reg <= 1'h0;	// src/main/scala/operator/Encrypt.scala:37:36, :46:36
      mp_din_valid_reg <= 1'h0;	// src/main/scala/operator/Encrypt.scala:37:36, :55:35
      mp_mult <= 2048'h0;	// src/main/scala/operator/Encrypt.scala:32:26, :56:35
      mp_multcand <= 2048'h0;	// src/main/scala/operator/Encrypt.scala:32:26, :57:35
      running <= 1'h0;	// src/main/scala/operator/Encrypt.scala:37:36, :64:33
      mp_valid_1 <= 1'h0;	// src/main/scala/operator/Encrypt.scala:37:36, :65:33
      mp_valid_2 <= 1'h0;	// src/main/scala/operator/Encrypt.scala:37:36, :66:33
      dout_valid_reg <= 1'h0;	// src/main/scala/operator/Encrypt.scala:37:36, :69:33
    end
    else begin	// <stdin>:654:11
      automatic logic _GEN = mp_valid_1 & mp_valid_2;	// src/main/scala/operator/Encrypt.scala:65:33, :66:33, :111:21
      if (running) begin	// src/main/scala/operator/Encrypt.scala:64:33
        g <= din_bits_g;	// src/main/scala/operator/Encrypt.scala:28:26
        m <= din_bits_m;	// src/main/scala/operator/Encrypt.scala:29:26
        r <= din_bits_r;	// src/main/scala/operator/Encrypt.scala:30:26
        n <= din_bits_n;	// src/main/scala/operator/Encrypt.scala:31:26
        mod <= din_bits_mod;	// src/main/scala/operator/Encrypt.scala:32:26
        expkm <= din_bits_param_expkm;	// src/main/scala/operator/Encrypt.scala:33:26
        exp2km <= din_bits_param_exp2km;	// src/main/scala/operator/Encrypt.scala:34:26
      end
      if (_mp_dout_valid)	// src/main/scala/operator/Encrypt.scala:58:20
        res <= _mp_dout_bits_res;	// src/main/scala/operator/Encrypt.scala:35:26, :58:20
      pm1_din_valid_reg <= running;	// src/main/scala/operator/Encrypt.scala:37:36, :64:33
      pm2_din_valid_reg <= running;	// src/main/scala/operator/Encrypt.scala:46:36, :64:33
      mp_din_valid_reg <= _GEN | mp_din_valid_reg;	// src/main/scala/operator/Encrypt.scala:55:35, :111:21, :112:5, :115:26
      if (_pm1_dout_valid)	// src/main/scala/operator/Encrypt.scala:38:21
        mp_mult <= _pm1_dout_bits_res;	// src/main/scala/operator/Encrypt.scala:38:21, :56:35
      if (_pm2_dout_valid)	// src/main/scala/operator/Encrypt.scala:47:21
        mp_multcand <= _pm2_dout_bits_res;	// src/main/scala/operator/Encrypt.scala:47:21, :57:35
      running <= ~_mp_dout_valid & din_valid;	// src/main/scala/operator/Encrypt.scala:58:20, :64:33, :75:5, :118:5, :121:24
      mp_valid_1 <= ~_GEN & (_pm1_dout_valid | mp_valid_1);	// src/main/scala/operator/Encrypt.scala:38:21, :65:33, :101:5, :103:20, :111:21, :112:5, :113:26
      mp_valid_2 <= ~_GEN & (_pm2_dout_valid | mp_valid_2);	// src/main/scala/operator/Encrypt.scala:47:21, :66:33, :101:5, :106:5, :108:21, :111:21, :112:5, :113:26, :114:26
      dout_valid_reg <= _mp_dout_valid | running & dout_valid_reg;	// src/main/scala/operator/Encrypt.scala:58:20, :64:33, :69:33, :83:5, :97:27, :118:5, :119:24
    end
  end // always @(posedge)
  Powmod pm1 (	// src/main/scala/operator/Encrypt.scala:38:21
    .clock           (clock),
    .reset           (reset),
    .din_valid       (pm1_din_valid_reg),	// src/main/scala/operator/Encrypt.scala:37:36
    .din_bits_base   (g),	// src/main/scala/operator/Encrypt.scala:28:26
    .din_bits_exp    (m),	// src/main/scala/operator/Encrypt.scala:29:26
    .din_bits_mod    (mod),	// src/main/scala/operator/Encrypt.scala:32:26
    .din_bits_expkm  (expkm),	// src/main/scala/operator/Encrypt.scala:33:26
    .din_bits_exp2km (exp2km),	// src/main/scala/operator/Encrypt.scala:34:26
    .dout_valid      (_pm1_dout_valid),
    .dout_bits_res   (_pm1_dout_bits_res)
  );
  Powmod_1 pm2 (	// src/main/scala/operator/Encrypt.scala:47:21
    .clock           (clock),
    .reset           (reset),
    .din_valid       (pm2_din_valid_reg),	// src/main/scala/operator/Encrypt.scala:46:36
    .din_bits_base   (r),	// src/main/scala/operator/Encrypt.scala:30:26
    .din_bits_exp    (n),	// src/main/scala/operator/Encrypt.scala:31:26
    .din_bits_mod    (mod),	// src/main/scala/operator/Encrypt.scala:32:26
    .din_bits_expkm  (expkm),	// src/main/scala/operator/Encrypt.scala:33:26
    .din_bits_exp2km (exp2km),	// src/main/scala/operator/Encrypt.scala:34:26
    .dout_valid      (_pm2_dout_valid),
    .dout_bits_res   (_pm2_dout_bits_res)
  );
  ModMul mp (	// src/main/scala/operator/Encrypt.scala:58:20
    .clock             (clock),
    .reset             (reset),
    .din_valid         (mp_din_valid_reg),	// src/main/scala/operator/Encrypt.scala:55:35
    .din_bits_mult     (mp_mult),	// src/main/scala/operator/Encrypt.scala:56:35
    .din_bits_multcand (mp_multcand),	// src/main/scala/operator/Encrypt.scala:57:35
    .din_bits_mod      (mod),	// src/main/scala/operator/Encrypt.scala:32:26
    .dout_valid        (_mp_dout_valid),
    .dout_bits_res     (_mp_dout_bits_res)
  );
  assign din_ready = 1'h1;	// <stdin>:653:3, src/main/scala/operator/Encrypt.scala:68:33
  assign dout_valid = dout_valid_reg;	// <stdin>:653:3, src/main/scala/operator/Encrypt.scala:69:33
  assign dout_bits_res = res;	// <stdin>:653:3, src/main/scala/operator/Encrypt.scala:35:26
endmodule

